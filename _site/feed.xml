<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2024-12-04T08:26:44+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Learning&amp;amp;Running</title><subtitle>데이터를 통해 비즈니스의 효율성을 높이고,고객의 경험을 향상시키는 데 기여하고 싶은 데이터 엔지니어, 김성록입니다.
</subtitle><author><name>&lt;Kim&gt; &lt;Seongrok&gt;</name><email>&lt;seongrok.kim@elinha.net&gt;</email></author><entry><title type="html">카카오맵 리뷰데이터 분석으로 음식점 랭킹화</title><link href="http://localhost:4000/post/tech/review/2024-10-25-what2eat-upgrade/" rel="alternate" type="text/html" title="카카오맵 리뷰데이터 분석으로 음식점 랭킹화" /><published>2024-10-25T09:09:09+09:00</published><updated>2024-12-04T08:25:25+09:00</updated><id>http://localhost:4000/post/tech/review/what2eat%20upgrade</id><content type="html" xml:base="http://localhost:4000/post/tech/review/2024-10-25-what2eat-upgrade/"><![CDATA[<p>머먹(What2Eat)의 핵심은 단순히 음식점의 평점을 숫자로만 평가하지 않고, 리뷰어 개개인의 기준에서 리뷰를 해석하여 보다 신뢰도 높은 음식점 랭킹을 제공하는 데 있습니다. 
기존 평가 방식과 이를 업그레이드하게 된 배경, 그리고 문제 해결 과정에서 적용한 새로운 접근법을 공유합니다.</p>

<hr />

<h1 id="1-기존-평가-방식-리뷰어-기준의-만족도-계산"><strong>1. 기존 평가 방식: 리뷰어 기준의 만족도 계산</strong></h1>
<p>머먹의 기본 아이디어는 “평점은 단순히 숫자가 아니라, 리뷰어 개인의 기준에서 평가해야 한다”는 것이었습니다. 이를 위해 다음과 같은 방식으로 음식점을 평가했습니다:</p>

<ol>
  <li><strong>리뷰어 기준의 만족과 불만족 정의</strong>:
    <ul>
      <li>리뷰어 평균 평점(<code class="language-plaintext highlighter-rouge">reviewer_avg</code>)을 기준으로,
        <ul>
          <li><strong>1.5배 높은 평점</strong>을 남겼을 경우 → “만족”</li>
          <li><strong>1.5배 낮은 평점</strong>을 남겼을 경우 → “불만족”</li>
        </ul>
      </li>
      <li>이 기준을 통해 각 음식점에 대해 <strong>만족 리뷰 수</strong>와 <strong>불만족 리뷰 수</strong>를 계산했습니다.</li>
    </ul>
  </li>
  <li><strong>만족도 기반 음식점 평가</strong>:
    <ul>
      <li>음식점마다 <strong>만족 리뷰 수 / 총 리뷰 수</strong>를 계산해 정렬하여 랭킹화.</li>
      <li>추가적으로, 불만족 비율이 10% 이상인 경우 “불호주의 퍼센트”로 경고 표시.</li>
    </ul>
  </li>
</ol>

<h2 id="기존-방식의-장점"><strong>기존 방식의 장점</strong></h2>
<ul>
  <li>간단하고 직관적인 계산으로 음식점의 긍정적 평가를 파악할 수 있었음.</li>
  <li>“불호주의”로 유명한 음식점이지만 불호 요소를 조심하라는 정보 제공.</li>
</ul>

<hr />

<h1 id="2-기존-방식의-문제점"><strong>2. 기존 방식의 문제점</strong></h1>
<p>기존 평가 방식은 단순하고 직관적이었지만, 다음과 같은 문제점이 있었습니다:</p>

<h2 id="문제점-1-리뷰어별-성향의-차이-반영-부족"><strong>문제점 1: 리뷰어별 성향의 차이 반영 부족</strong></h2>
<ul>
  <li>어떤 리뷰어는 “좋을 때만 리뷰를 남기는 사람”이었고, 어떤 리뷰어는 “싫을 때만 리뷰를 남기는 사람”이었습니다.</li>
  <li>이런 성향에 따라 리뷰어의 평균 평점(<code class="language-plaintext highlighter-rouge">reviewer_avg</code>)이 왜곡될 수 있었고, 이는 만족/불만족 기준에 영향을 미쳤습니다.</li>
</ul>

<h2 id="문제점-2-리뷰의-최신성-미반영"><strong>문제점 2: 리뷰의 최신성 미반영</strong></h2>
<ul>
  <li>5년 전에 남겨진 리뷰와 최근 3개월 내에 남겨진 리뷰가 동일한 비중으로 계산되었기 때문에, 현재 상태를 정확히 반영하지 못했습니다.</li>
</ul>

<hr />

<h1 id="3-업그레이드된-평가-방식"><strong>3. 업그레이드된 평가 방식</strong></h1>
<p>이 문제를 해결하기 위해 두 가지 새로운 요소를 도입했습니다: <strong>리뷰어 활동 레벨 가중치</strong>와 <strong>리뷰 작성 날짜 가중치</strong>.</p>

<hr />

<h2 id="1-리뷰어-활동-레벨-가중치"><strong>1) 리뷰어 활동 레벨 가중치</strong></h2>
<p>리뷰어마다 카카오맵에서 제공하는 <code class="language-plaintext highlighter-rouge">badge_level</code>을 활용했습니다.</p>

<h3 id="a-배지badge의-등급grade과-레벨level-소개"><strong>a). 배지(Badge)의 등급(Grade)과 레벨(Level) 소개</strong></h3>
<ul>
  <li><strong>카카오맵 배지 서비스</strong>는 <strong>2023년 5월 9일</strong>부터 공개된 서비스로, 사용자가 지도에서 활동을 통해 점수를 쌓으면 레벨과 배지가 부여됩니다.</li>
  <li><strong>레벨(Level)</strong>:
    <ul>
      <li>1부터 100까지 총 100개의 등급으로 구성.</li>
      <li>활동량에 따라 점수가 누적되어 레벨이 상승.</li>
    </ul>
  </li>
  <li><strong>등급(Grade)</strong>:
    <ul>
      <li>브론즈 → 실버 → 골드 → 블루 → 퍼플 순으로 5개의 등급이 존재.</li>
      <li>퍼플이 가장 높은 등급으로, 활동량이 많고 검증된 사용자를 나타냄.</li>
    </ul>
  </li>
</ul>

<hr />

<ul>
  <li><strong>후기 작성, 장소 제안, 즐겨찾기 그룹 생성</strong> 등의 활동 데이터를 기반으로 배지 레벨을 부여하기 때문에, 크롤링으로 가져오는 단순 평점 데이터와 비교했을 때 다음과 같은 <strong>검증된 신뢰성</strong>을 제공합니다.</li>
</ul>

<h3 id="적용-방식"><strong>적용 방식</strong></h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">badge_level</code>이 높을수록 해당 리뷰어의 평점(<code class="language-plaintext highlighter-rouge">reviewer_review_score</code>)에 더 높은 가중치를 부여.</li>
  <li>비대칭적인 분포를 반영하기 위해 <strong>로그 스케일링(Logarithmic Scaling)</strong> 방식으로 정규화:
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">badge_level_norm</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">log1p</span><span class="p">(</span><span class="n">row</span><span class="p">[</span><span class="s">"badge_level"</span><span class="p">])</span> <span class="o">/</span> <span class="n">np</span><span class="p">.</span><span class="nf">log1p</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
  <li>이렇게 계산된 <code class="language-plaintext highlighter-rouge">badge_level_norm</code>을 리뷰 점수에 가중치로 반영.</li>
</ul>

<hr />

<h2 id="2-리뷰-작성-날짜-가중치"><strong>2) 리뷰 작성 날짜 가중치</strong></h2>
<p>리뷰의 최신성을 반영하기 위해 리뷰 작성 날짜(<code class="language-plaintext highlighter-rouge">reviewer_review_date</code>)에 가중치를 부여했습니다.</p>

<h3 id="적용-방식-1"><strong>적용 방식</strong></h3>
<ul>
  <li>최신 리뷰일수록 더 높은 가중치를, 오래된 리뷰일수록 낮은 가중치를 부여.</li>
  <li>
    <p>날짜 가중치를 계산하는 함수:</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">date_weight</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="p">(</span><span class="n">today</span> <span class="o">-</span> <span class="n">row</span><span class="p">[</span><span class="s">"reviewer_review_date"</span><span class="p">]).</span><span class="n">days</span> <span class="o">/</span> <span class="mi">90</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
  <li>기준:
    <ul>
      <li>3개월 이내(90일)의 리뷰 → 가중치 1</li>
      <li>3개월 이후 → 날짜가 멀어질수록 가중치 감소, 최대 0까지.</li>
    </ul>
  </li>
</ul>

<h3 id="a-3개월-이내를-동일하게-가중치-1로-한-이유미슐랭-가이드"><strong>a) 3개월 이내를 동일하게 가중치 1로 한 이유(미슐랭 가이드)</strong></h3>
<p>미슐랭 가이드는 심사의 일관성을 보장하기 위해 1년에 5~6회 이상 음식점을 방문하며 평가를 진행합니다. 이는 특정 시점의 리뷰나 경험에 의존하지 않고, 시간이 지나도 음식점의 서비스와 음식 퀄리티가 일관성을 유지하는지를 보는 데 중점을 둡니다.</p>
<h4 id="일관성이-3개월은-유지될-것으로-판단"><strong>일관성이 3개월은 유지될 것으로 판단</strong></h4>
<ul>
  <li>미슐랭 심사에서는 단기적인 변화를 크게 반영하지 않습니다. 따라서 2~3개월 내의 변화는 안정적이라고 간주합니다.</li>
  <li>이를 바탕으로, <strong>최근 3개월 이내의 리뷰는 동일한 가중치(최대 가중치 1)</strong>를 부여하기로 결정했습니다.</li>
</ul>

<h4 id="오래된-리뷰-처리"><strong>오래된 리뷰 처리</strong></h4>
<ul>
  <li>3개월 이후의 리뷰는 중요도가 점차 감소할 수 있도록 가중치를 낮췄습니다.</li>
  <li>오래된 리뷰는 현재 음식점의 상태를 반영하지 못할 가능성이 높기 때문입니다.</li>
</ul>

<hr />

<h2 id="3-개선된-리뷰-점수-계산"><strong>3) 개선된 리뷰 점수 계산</strong></h2>
<p>리뷰어 활동 레벨과 리뷰 작성 날짜를 반영하여 최종적으로 가중치가 적용된 점수를 계산했습니다:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">calculate_weighted_score</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">today</span><span class="o">=</span><span class="n">current_date</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.7</span><span class="p">):</span>
    <span class="n">badge_level_norm</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">log1p</span><span class="p">(</span><span class="n">row</span><span class="p">[</span><span class="s">"badge_level"</span><span class="p">])</span> <span class="o">/</span> <span class="n">np</span><span class="p">.</span><span class="nf">log1p</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
    <span class="n">days_diff</span> <span class="o">=</span> <span class="p">(</span><span class="n">today</span> <span class="o">-</span> <span class="n">row</span><span class="p">[</span><span class="s">"reviewer_review_date"</span><span class="p">]).</span><span class="n">days</span>
    <span class="n">date_weight</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="n">days_diff</span> <span class="o">/</span> <span class="mi">90</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
    <span class="n">weighted_score</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s">"reviewer_review_score"</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">alpha</span> <span class="o">*</span> <span class="n">badge_level_norm</span><span class="p">)</span> <span class="o">*</span> <span class="n">date_weight</span>
    <span class="k">return</span> <span class="n">weighted_score</span>
</code></pre></div></div>

<hr />

<h1 id="4-랭킹-계산"><strong>4. 랭킹 계산</strong></h1>
<p>업그레이드된 리뷰 점수를 기반으로 음식점 랭킹을 다시 계산했습니다:</p>

<h2 id="1-음식점별-가중치-평균-및-합계-계산"><strong>1) 음식점별 가중치 평균 및 합계 계산</strong></h2>
<p>각 음식점에 대해 가중치가 적용된 리뷰 점수(<code class="language-plaintext highlighter-rouge">weighted_score</code>)의 평균과 합계를 계산한 후에 혼합 지표 생성하였습니다. 리뷰 개수가 단순히 많을 곳과 리뷰 개수가 적지면 좋은 점수로 분포한 것을 고루 반영하기 위함입니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Step 1: 평균과 합계 계산
</span><span class="n">weighted_scores</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">review</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="s">"diner_idx"</span><span class="p">)</span>
    <span class="p">.</span><span class="nf">agg</span><span class="p">(</span><span class="n">weighted_avg_score</span><span class="o">=</span><span class="p">(</span><span class="s">"weighted_review_score"</span><span class="p">,</span> <span class="s">"mean"</span><span class="p">),</span>
         <span class="n">weighted_sum_score</span><span class="o">=</span><span class="p">(</span><span class="s">"weighted_review_score"</span><span class="p">,</span> <span class="s">"sum"</span><span class="p">))</span>
    <span class="p">.</span><span class="nf">reset_index</span><span class="p">()</span>
<span class="p">)</span>

<span class="c1"># Step 2: 혼합 지표 생성
</span><span class="n">alpha</span><span class="p">,</span> <span class="n">beta</span> <span class="o">=</span> <span class="mf">0.7</span><span class="p">,</span> <span class="mf">0.3</span>  <span class="c1"># 평균과 합계의 중요도 비율
</span><span class="n">weighted_scores</span><span class="p">[</span><span class="s">"combined_score"</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">alpha</span> <span class="o">*</span> <span class="n">weighted_scores</span><span class="p">[</span><span class="s">"weighted_avg_score"</span><span class="p">]</span> <span class="o">+</span>
    <span class="n">beta</span> <span class="o">*</span> <span class="n">weighted_scores</span><span class="p">[</span><span class="s">"weighted_sum_score"</span><span class="p">]</span>
<span class="p">)</span>

</code></pre></div></div>

<h2 id="2-음식점-데이터와-병합"><strong>2) 음식점 데이터와 병합</strong></h2>
<p><code class="language-plaintext highlighter-rouge">diner_df</code>와 병합하여 최종적으로 음식점별 랭킹을 산출</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ranked_diner_df</span> <span class="o">=</span> <span class="n">diner_df</span><span class="p">.</span><span class="nf">merge</span><span class="p">(</span><span class="n">weighted_scores</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">"diner_idx"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">"left"</span><span class="p">)</span>

<span class="c1"># Step 3: 혼합 지표를 기준으로 랭킹 매기기
</span><span class="n">ranked_diner_df</span><span class="p">[</span><span class="s">"rank"</span><span class="p">]</span> <span class="o">=</span> <span class="n">ranked_diner_df</span><span class="p">[</span><span class="s">"weighted_avg_score"</span><span class="p">].</span><span class="nf">rank</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="3-결과"><strong>3) 결과</strong></h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">weighted_avg_score</code>(평균 점수)와 <code class="language-plaintext highlighter-rouge">weighted_sum_score</code>(총 점수)를 기준으로 정렬된 음식점 랭킹을 얻음.</li>
  <li>각 음식점의 “불호주의 퍼센트”도 유지하여 불만족 리뷰가 높은 음식점을 경고로 표시.</li>
</ul>

<hr />

<h1 id="5-결론"><strong>5. 결론</strong></h1>
<p>이번 업그레이드를 통해 머먹(What2Eat)은 다음과 같은 개선점을 이뤄냈습니다:</p>
<ol>
  <li><strong>리뷰어 신뢰도 반영</strong>: <code class="language-plaintext highlighter-rouge">badge_level</code>을 활용해 리뷰어의 활동량에 따라 평점의 중요도를 조정.</li>
  <li><strong>리뷰 최신성 강화</strong>: 리뷰 작성 날짜를 반영해 현재 상태와 더 일치하는 랭킹 산출.</li>
  <li>
    <h2 id="정확성과-신뢰도-향상-단순히-리뷰-개수와-평점-평균에-의존하지-않고-가중치를-기반으로-더-정교한-분석-가능"><strong>정확성과 신뢰도 향상</strong>: 단순히 리뷰 개수와 평점 평균에 의존하지 않고, 가중치를 기반으로 더 정교한 분석 가능.</h2>
  </li>
</ol>

<h3 id="현실-테스트-강원도-속초에서의-머먹-활용"><strong>현실 테스트: 강원도 속초에서의 머먹 활용</strong></h3>
<p>업그레이드된 머먹으로 강원도 속초에서 직접 테스트할 기회가 있었습니다. 토요일 점심, 저녁, 야식, 그리고 일요일 아침 겸 점심으로 찾아갈 식당들을 머먹으로 정해 방문해 보았습니다.</p>

<h4 id="머먹-테스트-결과"><strong>머먹 테스트 결과</strong></h4>
<ol>
  <li><strong>토요일 점심</strong>: 미리 찾아놓은 ‘산채가’라는 집은 영업시간이 아니어서 방문하지 못했습니다.</li>
  <li><strong>토요일 저녁</strong>: ‘치커리생구이’라는 로컬 맛집에 방문했습니다. 이곳은 아파트 밀집 지역 한가운데에 위치한 곳으로, 진정한 로컬 맛집의 느낌을 물씬 풍겼습니다.
    <ul>
      <li><strong>결과</strong>: 대만족! 웨이팅이 약 30분 있었지만, 여태 먹어본 소고기 중 가장 맛있다고 느낄 정도로 만족스러웠습니다.</li>
    </ul>
  </li>
  <li><strong>토요일 야식</strong>: 야식으로 포장해간 횟집</li>
  <li><strong>일요일 아침 겸 점심</strong>: 속초에서의 마지막 식사를 머먹으로 추천받은 곳에서 마무리하며, 만족스러운 여행을 마쳤습니다. 김정옥할머니순두부 본점</li>
</ol>

<h4 id="머먹의-강점-확인"><strong>머먹의 강점 확인</strong></h4>
<p>머먹이 추천한 음식점들은 단순히 높은 평점만을 기준으로 선정된 것이 아니라, <strong>리뷰어의 활동 레벨과 최신 리뷰의 신뢰도</strong>를 반영한 결과였습니다. 특히 관광지 음식점은 리뷰 알바와 같은 부정확한 평점 데이터가 더 많을 수 있는데, 머먹은 진짜로 만족한 리뷰어와 <strong>맛집 경험이 많은 ‘맛잘알’ 리뷰어</strong>의 최근 평가를 기준으로 식당을 추천했기 때문에 더 높은 만족도를 경험할 수 있었습니다.</p>

<hr />

<h3 id="마무리"><strong>마무리</strong></h3>
<p>머먹(What2Eat)은 이번 업그레이드를 통해 더 신뢰도 높은 음식점 정보를 제공할 수 있는 강력한 도구로 거듭났습니다. 실제 테스트에서도 성공적인 결과를 확인하며, 앞으로 더 많은 사용자들이 머먹을 활용해 자신만의 맛집을 찾아갈 수 있을 것으로 기대됩니다.
머먹은 데이터 기반의 정교한 분석을 통해 사용자의 만족도를 높이는 것을 목표로 합니다. 앞으로도 다양한 데이터를 활용해 지속적으로 발전해 나갈 예정이며, 여행지에서뿐만 아니라 일상 속에서도 여러분의 든든한 맛집 탐방 동반자가 되길 바랍니다! 😊
머먹은 앞으로도 데이터 기반 분석을 통해 더 나은 사용자 경험을 제공할 수 있도록 지속적으로 개선해 나갈 계획입니다. 이 글이 비슷한 문제를 고민하는 데이터 분석가들에게 도움이 되길 바랍니다! 😊</p>]]></content><author><name>&lt;Kim&gt; &lt;Seongrok&gt;</name><email>&lt;seongrok.kim@elinha.net&gt;</email></author><category term="post" /><category term="Tech" /><category term="review" /><summary type="html"><![CDATA[머먹(What2Eat) 리뷰 데이터 분석: 기존 방식과 업그레이드된 평가 방식]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://velog.velcdn.com/images/sungrok7/post/3c70db0d-5424-44b6-a1a7-46d703821c6e/image.png" /><media:content medium="image" url="https://velog.velcdn.com/images/sungrok7/post/3c70db0d-5424-44b6-a1a7-46d703821c6e/image.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">퇴근 후 프로젝트</title><link href="http://localhost:4000/post/tech/review/2024-10-25-After-work-projects/" rel="alternate" type="text/html" title="퇴근 후 프로젝트" /><published>2024-10-25T09:09:09+09:00</published><updated>2024-10-25T23:09:37+09:00</updated><id>http://localhost:4000/post/tech/review/After%20work%20projects</id><content type="html" xml:base="http://localhost:4000/post/tech/review/2024-10-25-After-work-projects/"><![CDATA[<p>개발자에게 가장 중요한 것은 무엇일까?</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/91ccfe71-9c82-43bb-974b-87060120c716/image.jpg" alt="" /></p>

<p>‘<strong>지속적인 성장</strong>‘이 가장 먼저 떠오른다. 그렇다면 지속적인 성장에는 어떤 것이 필요할까?</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/960b1fc1-99ce-4ae3-b69f-504a4c4d535d/image.jpg" alt="" /></p>

<p>성장의 가장 큰 원동력은 바로 ‘<strong>흥미</strong>‘다. 흥미가 있어야 새로운 것을 배우고자 하는 열정이 생기며, 그것이 곧 성장을 이끈다. 성장 없이는 흥미도 지속되기 어렵고 흥미 없이는 성장도 멈춘다. 이 둘은 굉장히 상호 의존적이다. 그러므로 <strong>지속적인</strong> 성장을 위해서는 흥미 역시 <strong>지속적으로</strong> 필요하다.</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/5188c73b-41e5-411a-8378-e584e3af1da0/image.jpg" alt="" /></p>

<p><strong>지속적인 흥미</strong>를 위해서는 무엇이 필요한가? 흥미는 개인적인 관심사로부터 가장 많이 발현된다.지속적인 것은 프로젝트로 가능하다. 정리하자면, 개인적인 관심사를 발견하고, 관심사와 연결된 프로젝트를 함으로써 지속적인 성장을 이룰 수 있다.</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/7c221490-a128-4fb7-9294-93b00fc1b159/image.jpg" alt="" /></p>

<p>회사에서 관심사와 연결된 프로젝트를 진행할 수 있다면 가장 이상적이다. 그러나 현실적으로 그런 기회를 갖기는 어렵다. 업무에는 일정한 제한이 있고, 개인의 흥미보다는 회사의 목표가 우선시되기 때문이다. 이러한 한계를 극복하기 위해 퇴근 후 시간을 활용했다. 즉, 퇴근 후 프로젝트를 통해 나의 관심사를 깊이 있게 탐구하고, 새로운 기술을 습득하며, 업무에서 얻지 못하는 만족감을 느꼈다. 이는 단순한 취미 활동이 아니라, 개발자로서의 성장을 가속화하는 중요한 전략이었다.</p>

<h2 id="실제-사례로-본-퇴근-후-프로젝트의-효과">실제 사례로 본 퇴근 후 프로젝트의 효과</h2>

<p>나의 개인적인 관심사인 맛집 찾기에서 아이디어를 얻었다. 기존의 지도 기반 맛집 애플리케이션을 사용하면서 불편함을 느꼈고, 이를 개선한 애플리케이션을 만들고자 했다. 맛집을 선별하고 분석하며, 개인의 취향에 맞게 추천까지 해주는 애플리케이션 개발을 목표로 퇴근 후 프로젝트를 시작했다.</p>

<p>먼저, 기존의 맛집 추천 애플리케이션들을 리뷰하고 그들이 직면한 문제들을 분석했다. 비슷한 목적을 가진 영화나 음악 추천 시스템도 함께 연구하며, 어떻게 개인화된 추천이 이루어지는지 이해하고자 했다. 그 과정에서 <strong>그래프 신경망(GNN)</strong>을 활용한 추천 시스템이 최근의 트렌드임을 알게 되었고, 이에 대한 공부를 시작했다.</p>

<p>그러나 혼자서 그래프 러닝을 배우기에는 한계가 있었다. 그래서 <strong>‘쩝쩝 LAB’</strong>이라는 연구 모임을 개설하여 12명의 개발자들과 함께 학습하기로 했다. 매주 한 번씩 모여 공부한 내용을 발표하고 토론하며, 함께 성장해나갔다.</p>

<p>이러한 활동은 단순히 기술 스킬을 향상시키는 것을 넘어, 삶의 활기를 북돋아주고 개발자로서의 자신감과 열정을 키워주는 계기가 되었다. 또한, 함께하는 동료들과의 협업을 통해 프로젝트 관리 능력과 커뮤니케이션 스킬도 향상시킬 수 있었다. 필자는 이 경험이 미래의 밝은 장래성을 가져다줄 것이라고 믿는다.</p>

<h2 id="지속적인-성장을-위한-사이클">지속적인 성장을 위한 사이클</h2>
<p><img src="https://velog.velcdn.com/images/sungrok7/post/210e32f6-adc3-43a6-a58a-3365686e88ff/image.jpg" alt="" /></p>

<p>이러한 과정은 사이클 형태로 지속된다. 개발자에게 중요한 것은 지속적인 성장이고, 이는 흥미에서 시작된다. 흥미는 관심사와 연결된 프로젝트를 통해 지속되고, 퇴근 후 프로젝트는 다시 성장과 흥미를 증진시킨다. 이 사이클은 개발자의 성장을 끊임없이 촉진한다.</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/0458f627-d2b2-4366-8859-d3c276dc0f21/image.jpg" alt="" /></p>

<ol>
  <li>
    <p>프로젝트를 하기 위해 의무가 아닌 필요에 의해 새로운 기술을 학습해야 했고, 이는 자연스럽게 공부하고자 하는 의지로 이어졌다.</p>
  </li>
  <li>
    <p>개발은 적당한 자신감과 치밀함의 자세가 필요한데 꾸준한 프로젝트 진행을 통해 그 흐름을 지속적으로 유지할 수 있었다.</p>
  </li>
  <li>
    <p>코드가 안 풀리면 일상 속 기분도 안 좋은 걸 알았다. 그런 업무에서 받은 스트레스를 퇴근 후 프로젝트를 통해 해소하고, 새로운 에너지를 얻을 수 있었다.</p>
  </li>
  <li>
    <p>나의 개발 메타인지가 향상됨을 느꼈다. 아직 무엇이 부족하고 무엇을 잘하는지 파악할 기회가 더 많아졌다.</p>
  </li>
  <li>
    <p>퇴근 후 프로젝트를 통해 포트폴리오를 강화하고, 그래프 신경망 등 최신 기술을 습득할 수 있었다.</p>
  </li>
  <li>
    <p>퇴근 후 프로젝트에서 얻은 스킬이 귀신같이 업무에서 급작스럽게 쓰일 때가 있었다. 당황하지 않고</p>
  </li>
</ol>

<h3 id="빠르게-변화하는-환경-속에서의-자기-성장-전략">빠르게 변화하는 환경 속에서의 자기 성장 전략</h3>

<p>현대 사회에서 개발자들은 빠르게 변화하는 기술 환경에 적응해야 하는 도전에 직면해 있다. 특히 AI와 같은 분야에서는 새로운 지식이 끊임없이 쏟아져 나오고 있다. 이런 상황에서 퇴근 후 프로젝트는 자기 성장 전략의 핵심이 될 수 있다.</p>

<p>그런 빠른 변화의 흐름 속에 개발자들은  “내가 이 분야에 적합한가?”, “발전만큼 나의 성장이 따라 갈 수 있을까?”, “저 스킬도 알아야하나?”와 같은 고민을 한다. 필자는 퇴근 후 프로젝트를 통해 이러한 고민에 대한 답을 찾을 수 있었다. 스스로의 능력을 확인하고, 부족한 부분을 보완하며, 자신의 진로를 명확히 설정할 수 있었다.</p>

<h2 id="마무리하며">마무리하며</h2>

<p>빠르게 변화하는 개발 환경에서 지속적인 성장은 의무라고 생각하면 피곤해진다. 그래서 그 시작을 자신의 흥미에서 찾고, 이를 지속시키는 데 어쩌면 답이 있다고 생각한다. 퇴근 후 프로젝트는 개발자로서의 성장을 가속화하는 강력한 도구다.</p>

<p>“퇴근 후 시간을 활용해 자신만의 프로젝트를 시작해보는 것은 어떨까?” 작은 시작이 큰 변화를 가져올 수 있다. 지속적인 흥미와 성장을 통해 더 나은 개발자로 성장할 수 있을 것이다. 시작하기 어려운 분들을 위해 템플릿을 준비했다. 템플릿에 있는 내용을 GPT와 함께 퇴근 후 프로젝트 거리를 찾아보면 어떨까?</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/01cdb727-5403-4532-a28b-0482d1100939/image.jpg" alt="" /></p>]]></content><author><name>&lt;Kim&gt; &lt;Seongrok&gt;</name><email>&lt;seongrok.kim@elinha.net&gt;</email></author><category term="post" /><category term="Tech" /><category term="review" /><summary type="html"><![CDATA[WOOWACON 2024 발표]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://velog.velcdn.com/images/sungrok7/post/3c70db0d-5424-44b6-a1a7-46d703821c6e/image.png" /><media:content medium="image" url="https://velog.velcdn.com/images/sungrok7/post/3c70db0d-5424-44b6-a1a7-46d703821c6e/image.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">데이터 분석과 머신러닝을 통한 유저 맛집 추천하기</title><link href="http://localhost:4000/post/tech/review/2024-10-03-What-to-eat-today/" rel="alternate" type="text/html" title="데이터 분석과 머신러닝을 통한 유저 맛집 추천하기" /><published>2024-10-03T09:09:09+09:00</published><updated>2024-10-03T17:42:59+09:00</updated><id>http://localhost:4000/post/tech/review/What%20to%20eat%20today</id><content type="html" xml:base="http://localhost:4000/post/tech/review/2024-10-03-What-to-eat-today/"><![CDATA[<blockquote>
  <p>“오늘 뭐 먹지?”</p>
</blockquote>

<p>이 간단한 질문에 대한 답을 찾는 것이 왜 이리 어려울까? 특히 친구들과 함께 식사 장소를 고르려 할 때면 더욱 그렇다. 같은 장소에서 각자 스마트폰으로 맛집을 검색하는데, 모두가 같은 음식점 리스트를 보며 일일이 가야할 곳을 찾아낼 때면 안타까운 마음이 든다.
영화 추천, 중고거래 추천 등 다양한 개인화 추천 서비스가 있는데, 왜 맛집 추천만큼은 이렇다 할 서비스가 없을까? 이 의문에서 시작해 두 가지 프로젝트를 진행하게 되었다, ‘What2Eat’과 ‘취향식탁’</p>

<p>각자 가진 다양한 취향과 우리가 처할 수 있는 여러 상황에 딱 맞는 맛집을 추천하는 것은 쉽지 않은 일이다.</p>

<p>더불어 개인의 취향과 상황에 맞는 것도 중요하지만, 결국 자타공인 맛집이 되려면 타인에게도 좋은 평가를 받아야 한다. 이 두 가지 측면을 모두 고려하여 각각의 프로젝트를 설계했다. ‘What2Eat’은 객관적인 평가를 바탕으로 좋은 음식점을 가려내는 데 중점을 뒀고, ‘취향식탁’은 개인의 취향에 맞춘 추천에 초점을 맞췄다.</p>

<p>이 두 프로젝트를 통해 우리는 같은 장소에서 검색하더라도, 각자의 취향과 상황에 맞는 자타공인 맛집을 추천받을 수 있는 시스템을 만들고자 한다.</p>

<h1 id="what2eat-객관적인-맛집-필터링">What2Eat: 객관적인 맛집 필터링</h1>

<p>‘What2Eat’은 리뷰의 평점을 중심으로 분석하여 유의미한 평가 기준의 음식점을 필터링하는 프로젝트다.</p>

<h2 id="주요-특징">주요 특징:</h2>

<p>카카오맵에서 서울 지역 46,000여 개 음식점의 100만 개 이상 리뷰 데이터 수집
‘유의미한 평가’를 선별 알고리즘 개발하였다.</p>

<p>호(好) 평가자: 유저가 자신의 평균 평점보다 1.0 포인트 <strong>높게</strong> 준 평가
비호(非好) 평가자: 유저가 자신의 평균 평점보다 1.0 포인트 <strong>낮게</strong> 준 평가</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/0730e126-1835-4052-8bf7-602491bf401c/image.png" alt="" /></p>

<p>음식점마다 호 평가자와 비호 평가자의 수를 세어 총 평가수랑 비교한 수치를 토대로 나열하였다.</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/df752406-f574-4858-b19b-a302caa06e98/image.png" alt="" /></p>

<p>호 평가자를 쩝쩝박사로 지칭하고 해당 위치의 거리 정보까지만 보여주고 자세한 정보는 카카오맵 링크로 확인할 수 있게 했다.</p>

<p>현재 서울 몇몇 지역을 토대로 데모 서비스를 운영 중이다. -&gt; <a href="https://what2eat-chat.streamlit.app/">오늘머먹?</a></p>

<h1 id="취향식탁-개인-취향-기반-추천">취향식탁: 개인 취향 기반 추천</h1>

<p>‘취향식탁’은 리뷰 텍스트 데이터를 분석하여 개인의 취향을 대변하는 데이터로 튜닝하고, 이를 바탕으로 추천 시스템을 만드는 프로젝트다.</p>

<h2 id="주요-특징-1">주요 특징</h2>

<p>이 프로젝트의 핵심 과제는 사용자의 <strong>취향을 대변할 수 있는 데이터</strong>를 확보하는 것이다.</p>

<h2 id="수집단계">수집단계</h2>

<p>현재 리뷰 수집 방식은 객관식과 주관식으로 크게 두 가지로 나뉜다. 객관식의 대표는 네이버 지도이다. 
<img src="https://velog.velcdn.com/images/sungrok7/post/48784728-e3b6-413f-b53c-b924c3cbcae9/image.jpg" alt="" /></p>

<p>이 방식은 데이터 처리가 용이하고 일관성 있는 정보를 얻을 수 있다는 장점이 있다. 반면 사용자의 구체적인 경험이나 미묘한 감정을 담아내기 어렵고, 제시된 선택지에 없는 의견은 반영되기 힘들다는 단점이 있다. 더욱이, 리뷰 작성 시 음식점에서 제공하는 음료 서비스와 같은 이벤트는 이러한 객관식 리뷰 시스템에서 더 큰 문제가 될 수 있다. 진정성 있는 리뷰보다는 빠르게 쓰고 보는 보상을 목적으로 한 리뷰가 늘어날 수 있기 때문에 이는 데이터의 편향을 가중시키는 요인이 될 수 있다.
<img src="https://velog.velcdn.com/images/sungrok7/post/288e6f14-c4ab-4423-a5e5-147bd81e1130/image.jpg" alt="" /></p>

<p>반면 대부분 우리가 알고 있는 리뷰 수집 방식인 주관식이다. 주관식의 자유 리뷰 방식은 풍부한 의견 수집이 가능하지만, 말그대로 너무나 자유롭다. 맞춤법, 신조어, 키보드를 아무렇게 누른 것(아모ㅓ래버앰너ㅑㅐ)으로 자신의 분노 혹은 감탄을 표현하기도 한다. 이렇게 자유분방한 표현을 어떻게 정제할 것인지가 최대 문제이다.</p>

<h2 id="튜닝-방법">튜닝 방법</h2>

<h3 id="형태소분석기-기반으로-문장-단순화">형태소분석기 기반으로 문장 단순화</h3>

<p>사용자 리뷰를 효과적으로 분석하기 위해 형태소 분석을 활용한 문장 단순화 기법을 도입했다. 이 방법은 복잡한 리뷰 텍스트에서 핵심 의미를 추출하고 불필요한 요소를 제거하는 데 중점을 둔다.</p>

<ol>
  <li>리뷰 텍스트에서 이모티콘을 제거하여 순수한 텍스트만을 남긴다. 이후 텍스트를 개별 문장으로 분리하고, 각 문장을 형태소 단위로 분석한다. 이 과정에서 한국어 자연어 처리 라이브러리인 Kiwi와 KKma를 활용한다.</li>
  <li>형태소 분석 결과에서 명사, 동사, 형용사 등 의미를 가진 주요 형태소를 선별적으로 보존한다. 부사나 연결어미도 필요에 따라 유지한다. 동사와 형용사의 경우, 일관성 있는 분석을 위해 기본형으로 변환한다.</li>
  <li>선별된 형태소들을 적절히 조합하여 단순화된 문장을 재구성한다. 이 과정에서 특정 품사에는 띄어쓰기를 추가하여 가독성을 높인다. 전체 과정은 예외 처리를 통해 안정성을 확보했다.
이러한 문장 단순화 과정을 통해 여러 효과를 기대할 수 있다. 먼저, 분석에 불필요한 요소들을 제거하여 데이터의 품질이 향상된다. 또한, 다양한 표현을 표준화하여 분석의 일관성을 높인다. 사용자의 핵심 의견을 더 명확하게 파악할 수 있으며, 단순화된 텍스트는 후속 분석 과정의 효율성도 높인다.</li>
</ol>

<table>
  <thead>
    <tr>
      <th>diner_idx</th>
      <th>reviewer_review</th>
      <th>keyphrase</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>62955585</td>
      <td>가격좋고 맛있어요.</td>
      <td>가격 좋다.  맛있다</td>
    </tr>
    <tr>
      <td>884898370</td>
      <td>직화 냄새도 좋고 고기 질이 좋아요 사장님도 친절하시고 좋습니다 추천</td>
      <td>직화 냄새 좋다.  고기 질 좋다,  사장님 친절하다.  좋다,</td>
    </tr>
    <tr>
      <td>16062328</td>
      <td>짱짱 맛있음! 친절함! 집밥같음! 최고!</td>
      <td>짱짱 맛있다,  친절하다,  집 밥 같다,</td>
    </tr>
  </tbody>
</table>

<h3 id="llm기반으로-긍부정-키워드-추출">LLM기반으로 긍부정 키워드 추출</h3>

<p>LLM은 알리바바에서 개발한 Qwen2.5 모델을 선택했는데, 이 모델은 한국어 리뷰 데이터 처리에 특화되어 있어 더 정확한 감성 분석과 키워드 추출이 가능하다.
Qwen 모델은 다국어 데이터셋으로 학습되었으며, 특히 아시아 언어에 대한 이해도가 높다. 분석 과정에서는 Chain of Thought를 이용한 프롬프트를 사용했다. 이 방식은 모델이 단계적으로 사고하며 결론을 도출하도록 유도하여, 더 정확하고 설명 가능한 결과를 얻을 수 있게 한다. 이 프롬프트의 자세한 내용과 구체적인 적용 방법에 대해서는 추후 별도의 포스팅을 통해 더 깊이 있게 다룰 예정이다.</p>

<p>실제 분석 결과를 보면, 모델이 리뷰 텍스트에서 주요 키워드를 추출하고 각 키워드의 긍정/부정 여부를 판단하는 것을 확인할 수 있다. 예를 들어, “가격좋고 맛있어요”라는 간단한 리뷰에서도 ‘가격’과 ‘맛’이라는 키워드를 추출하고 둘 다 긍정적으로 평가했다. 더 복잡한 리뷰에서는 여러 요소를 세분화하여 분석하는 능력을 보여주었다.
이러한 LLM 기반 분석 방식은 기존의 규칙 기반 또는 단순 머신러닝 방식에 비해 더 뉘앙스 있는 분석이 가능하며, 특히 한국어의 복잡한 문맥을 이해하는 데 큰 강점을 보인다. 이는 취향식탁 프로젝트에서 사용자의 세밀한 취향을 파악하는 데 핵심적인 역할을 할 것으로 기대된다.</p>

<table>
  <thead>
    <tr>
      <th>diner_idx</th>
      <th>reviewer_review</th>
      <th>review_sentiment_raw</th>
      <th>review_summary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>62955585</td>
      <td>가격좋고 맛있어요.</td>
      <td>- 가격: Positive (가격이 좋다) <br /> - 맛: Positive (맛이 좋아요)</td>
      <td>이 레스토랑은 가격이 좋고 맛이 좋아요.</td>
    </tr>
    <tr>
      <td>62955585</td>
      <td>항정살을 주문했는데, 고기 4 비계 6이더라고요. 마트가서 사도 이렇게 안하는데… 사이드의 양념도 너무 강해서 고기맛이 안나고요. 다시 방문할 일은 없을 것 같습니다.</td>
      <td>- 항정살: Negative (주문한 항정살이 원하는 것과 달랐습니다.)<br />- 고기: Negative (양이 적었고, 양념이 강해 맛이 안났습니다.)   - 비계: Negative (비계 비율이 높았습니다.)<br />- 양념: Negative (양념이 강해 맛이 안났습니다.)</td>
      <td>항정살 주문 시 고기 4 비계 6이었고, 양념이 강해 고기 맛이 안났습니다. 다시 방문할 일은 없을 것 같습니다.</td>
    </tr>
    <tr>
      <td>884898370</td>
      <td>직화 냄새도 좋고 고기 질이 좋아요 사장님도 친절하시고 좋습니다 추천</td>
      <td>- 직화: Positive (좋다)<br />- 고기: Positive (질이 좋아요) <br />- 친절: Positive (친절하시고 좋습니다)</td>
      <td>직화 냄새도 좋고 고기 질이 좋아요 사장님도 친절하시고 좋습니다 추천</td>
    </tr>
    <tr>
      <td>1939193370</td>
      <td>가족들과 방문했었는데 친절했습니다.동네라 그런지 몰라도 좋았어요.살짝 주문이 어수선하게 받아질 때가 있는데그런것만 잘 보완되길 바랍니다.사이드 메뉴도 정말 맛있어요. 오징어짬뽕인가정말 국물메뉴 최고에요. 꼭~</td>
      <td>- 친절: Positive (친절한 서비스를 받았다는 점에서)<br />- 주문: Negative (주문이 어수선하게 받아졌다는 점에서)<br />- 사이드 메뉴: Positive (사이드 메뉴가 맛있었다는 점에서)<br />- 오징어짬뽕: Positive (오징어짬뽕이 국물메뉴 최고라고 평가한 점에서)</td>
      <td>가족들과 방문했었는데 친절했습니다.</td>
    </tr>
  </tbody>
</table>

<h2 id="군집화-배치-process">군집화 배치 Process</h2>

<p>위 과정을 성공적으로 마쳤다면 음식점마다 리뷰에서 정제된 긍부정 키워드가 있다. 군집화를 통해 가장 짙은 취향을 가려내야한다. 음식점마다 짙은 취향의 긍정요소와 부정요소를 배치를 통해 모으고 추려야 한다. 이 과정은 사용자들한테도 마찬가지이다. 사용자마다 남긴 리뷰데이터는 위 과정으로 키워드화가 되어 있을테고 군집화를 거치면 사용자의 취향이 짙어진다. 수집, 정제, 군집을 파이프라인으로 완성하 이번 프로젝트의 가장 난제였던 취향을 대변한 데이터가 확보되는 것이다. 이를 토대로 추천시스템을 구현할 수 있다.</p>

<h2 id="쩝쩝-lab">쩝쩝 LAB</h2>

<p>쩝쩝 LAB(이하 랩)는 그래프 신경망(GNN) 기술을 활용한 맛집 추천 시스템을 개발 중이다. 이 프로젝트의 목표는 복잡한 요소들 간의 관계에서 사용자 취향을 정확히 파악하고 반영하는 시스템을 구현하는 것이다.</p>

<h3 id="그래프-신경망의-필요성">그래프 신경망의 필요성</h3>

<p>맛집 추천은 음식점과 사용자의 단순한 관계를 넘어선다. 사용자의 취향과 상황, 음식점의 특성, 메뉴, 분위기, 위치 등 다양한 요소가 복잡하게 얽혀 있다. 그래프 신경망은 이런 복잡한 관계를 효과적으로 모델링할 수 있는 기술이다.</p>

<p>사용자 취향은 여러 요소들의 관계 속에서 형성된다. A 음식점을 좋아한다고 해서 단순히 비슷한 음식점을 추천하는 것은 부족하다. 그 음식점의 어떤 요소를 좋아하는지, 그리고 그 요소들이 다른 음식점들과 어떻게 연결되는지를 종합적으로 분석해야 한다.</p>

<h3 id="gcn과-pinsage-적용">GCN과 PINSAGE 적용</h3>

<p>랩에서는 그래프 합성곱 신경망(GCN)과 PINSAGE 알고리즘을 적용한다. GCN은 취향-상황-맛집 간의 복잡한 관계를 그래프로 모델링해 더 정확한 추천을 가능케 한다. PINSAGE는 대규모 그래프에서 효율적으로 노드 임베딩을 학습한다.</p>

<h4 id="정확한-취향-포착">정확한 취향 포착</h4>

<p>이 기술들로 사용자의 취향을 더 정확하게 포착하려 한다. 예를 들어, 한 사용자가 아이와 함께 동행하며 조용한 분위기의 고추장찌개집을 찾는다고 가정해보자.  고추장찌개 메뉴가 있고 시끌벅적하지 않은 분위기에 아이와 함께라는 긍정 키워드가 많이 포함된 곳을 찾아주는 형태이다.</p>

<h3 id="네이버의-선행-연구">네이버의 선행 연구</h3>

<p>이 분야에서 네이버가 오랫동안 연구해온 점이 놀랍다. 2016년부터 시작된 그들의 연구는 우리에게 큰 영감을 주었다.</p>

<ol>
  <li>2016년: <a href="https://serviceapi.rmcnmv.naver.com/rmc/flash/outKeyPlayer?vid=8E4D6D76A8F2F3FF344F72806EEA866DAFA1&amp;outKey=V12900ab5bbe35eefde2ee300a9b7110b6dd108eac7f1b20bc800e300a9b7110b6dd1&amp;controlBarMovable=true&amp;jsCallable=true&amp;skinName=tvcast_white">“딥러닝을 이용한 지역 컨텍스트 검색” </a></li>
  <li>2020년: <a href="https://deview.kr/data/deview/session/attach/">“당신 취향의 맛집을 추천해드립니다” DEVIEW 세션</a></li>
  <li>2021년: <a href="https://tv.naver.com/v/23652392">”Knowledge Graph에게 맛집과 사용자를 묻는다: GNN으로 맛집 취향 저격 하기”</a></li>
  <li>2023년: <a href="https://deview.kr/2023/sessions/553">내 주변, 취향 장소 발견하기: HyperLocal 추천 시스템 A to Z</a></li>
</ol>

<p>특히 2023년 네이버 DEVIEW에서 직접 들은 내용은 정말 인상 깊었다. 그들의 연구가 이미 상당히 진전되었다는 사실에 적지 않은 충격을 받았다. 이는 나의 방향성을 재확인하는 계기가 되었고, 동시에 더 적극적인 접근의 필요성을 깨닫게 해주었다.</p>

<h1 id="앞으로의-과제">앞으로의 과제</h1>

<p>두 프로젝트 모두 아직 진행 중이며, 각각의 한계를 극복하기 위해 계속해서 개선되고 있다.</p>

<h2 id="what2eat의-과제">What2Eat의 과제</h2>

<p>평점을 남기는 사용자의 스타일에 따라 ‘유의미한 평점 리뷰어’를 찾는 현재의 방법이 반드시 객관적이라고 할 수 없다는 한계가 있다. 예를 들어, 진짜 맛없는 식당일 경우에만 평점을 남기는 리뷰어의 경우, 평균 평점과 특정 음식점에 남기는 평점이 비슷하여 ‘유의미하지 않다’고 오판할 수 있다.
반대로 진짜 맛있는 식당일 경우에만 리뷰를 남기는 사용자도 같은 문제에 직면한다.
이러한 케이스들은 현재의 알고리즘으로는 제대로 포착하기 어려워, 실제로는 의미 있는 리뷰가 무시될 수 있는 위험이 있다.</p>

<h2 id="취향식탁의-과제">취향식탁의 과제</h2>

<p>취향식탁에서는 난잡한 리뷰를 긍정/부정 평가가 담긴 일관된 표현으로 정리하는 것이 가장 큰 난관이다. 현재 다음과 같은 방법들을 시도하고 있다:</p>

<p>형태소 분석기 기반은 빠르지만 리뷰 자체가 완전한 문장이 아닐 때 똑같이 성능이 떨어진다. 포용성이 많이 부족하다. LLM기반은 Qwen2.5 모델의 도입으로 성능이 크게 향상되었지만, 확장 가능성을 본다면 처리속도가 여전히 너무 느리다. 높은 모델의 결괏값을 낮은 메모리의 모델에 학습시켜 속도와 정확도를 높일 예정이다.</p>

<h2 id="결론-끊임없는-도전">결론: 끊임없는 도전</h2>
<p>완벽한 맛집 추천 시스템은 아직 먼 미래의 이야기일지도 모른다. 하지만 ‘What2Eat’과 ‘취향식탁’ 프로젝트를 통해 그 목표에 한 걸음 더 가까워졌다고 믿는다. 올해 초 두 프로젝트를 완성하겠다고 목표로 삼았는데 앞으로도 더 많은 도전과 실험이 필요할 것이다. 객관적으로 인정받는 맛집과 개인의 취향에 딱 맞는 음식점을 모두 추천할 수 있는 그날까지!</p>

<blockquote>
  <p>“오늘 뭐 먹지? 머먹으로 찾아볼까?”</p>
</blockquote>]]></content><author><name>&lt;Kim&gt; &lt;Seongrok&gt;</name><email>&lt;seongrok.kim@elinha.net&gt;</email></author><category term="post" /><category term="Tech" /><category term="review" /><summary type="html"><![CDATA[취향과 상황에 맞는 나만의 자타공인 맛집 찾기]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://velog.velcdn.com/images/sungrok7/post/5dac900c-4db6-4bb4-8288-223c2a8fb432/image.jpg" /><media:content medium="image" url="https://velog.velcdn.com/images/sungrok7/post/5dac900c-4db6-4bb4-8288-223c2a8fb432/image.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">AI 언제 활용하시나요?</title><link href="http://localhost:4000/post/tech/review/2024-09-11-When-do-you-use-AI/" rel="alternate" type="text/html" title="AI 언제 활용하시나요?" /><published>2024-09-11T09:09:09+09:00</published><updated>2024-09-11T17:03:40+09:00</updated><id>http://localhost:4000/post/tech/review/When%20do%20you%20use%20AI</id><content type="html" xml:base="http://localhost:4000/post/tech/review/2024-09-11-When-do-you-use-AI/"><![CDATA[<p>요즘 AI를 사용하지 않는 날이 없다. 출근길 지하철에서는 블로그에 올릴 글을 AI와 아이디어를 나누며 완성해간다. 지금 이 글도 그렇다. “‘영화 Her의 AI 운영체제와 비슷한 기술이 우리 생활 속에 들어오려면 어떤 데이터와 기술이 필요할까?’를 주제로 글을 쓰고 싶다”고 하고 말투 예시를 적어준다. 그런 다음 수정 및 추가 내용, 글의 배치에 대해 이야기해가며 완성해나간다. 마치 나만의 편집자와 대화하는 듯한 느낌이 든다.</p>

<p>업무 중에도 AI의 도움은 필수다. 새로운 기능을 개발하다 필요한 서브 기능이 있으면 AI에게 물어본다. “이미지가 어떤 형태로 오든 Numpy array 형태로 나오는 함수를 만들어줘” AI는 코드를 제시해주고 나는 약간 수정을 거쳐 적용한다. 덕분에 개발 속도가 한층 빨라졌다.</p>

<p>일상 속 궁금증도 AI에게 물어보는 게 습관이 됐다. 얼마 전 일식집에서 청어알을 먹었는데, 함께한 지인이 문득 의문을 제기했다. “이 정도 양의 청어알이면 청어 몇 마리가 희생되어야 할까? 청어는 보통 몇 개의 알을 낳지?” AI에게 냅다 물어봤다. 그러니 내게 청어 한 마리가 평균 2만에서 7만 개의 알을 낳는다고 한다. 아직까지 숫자가 들어가 있는 세부 정보에 대해서는 할루시네이션이 존재할 수 있어, 구글에 한 번 더 검색 후 지인에게 알려주었다. 이런 식으로 AI는 내 호기심을 채워주는 든든한 해결사가 되어가고 있다.</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/bd06e28d-186a-4641-adba-85d5b0ad1410/image.png" alt="" /></p>

<p>더 나아가 이런 생각이 든다. 영화 ‘Her’의 사만다 같은 AI가 있다면 내 생활은 어떻게 변할까? 아침에 눈을 뜨면 그날의 날씨와 나의 일정, 어제 일어난 일들에 대해 자연스럽게 대화를 나누는 그런 AI 말이다. 현재의 AI는 최신 정보에 대해 약점이 있어 이런 대화가 어렵다. 하지만 앞으로는 실시간 정보를 RAG(Retrieval-Augmented Generation)로 가져다 주든 강화학습을 통하든 해서 AI가 날씨 정보, 일정 관리, 최신 소식 브리핑까지 함께 나눌 수 있게 되면 좋겠다.</p>

<p>그렇다면 사만다와 같은 AI 운영체제를 만들기 위해서는 어떤 데이터와 기술이 필요할까? 먼저, 방대한 양의 개인 데이터가 필요할 것이다. 사용자의 일상, 취향, 습관, 대화 패턴 등을 모두 아우르는 빅데이터다. 이를 바탕으로 사용자를 깊이 이해하고, 맥락에 맞는 대화를 이어갈 수 있어야 한다.</p>

<p>또한, 실시간으로 정보를 업데이트하고 학습하는 능력도 중요하다. 뉴스, 날씨, 교통 상황 등 세상의 모든 정보를 실시간으로 처리하고, 이를 사용자의 관심사와 연결 지어 제공할 수 있어야 한다. 이는 단순한 정보 제공을 넘어, 사용자의 삶에 실질적인 도움을 줄 수 있는 수준이어야 할 것이다.</p>

<p>감정 인식 기술도 필수적이다. 음성인식 기술이 들어가면 사용자의 목소리 톤, 속도를 고려하여 파악해야하지만 그전에 텍스트로 교류한다고 하였을 때 문맥에서 감정 인식을 해야하고 심지어 실시간 타이핑 패턴까지 분석해 감정 상태를 파악할 줄 알아야 충분한 데이터가 될 것 같다. 먼저 이해가 충분히 되어야 그에 맞는 적절한 반응을 할 수 있다. 이를 위해서는 고도의 자연어 처리 기술과 감성 AI 기술이 필요할 것이다.</p>

<p>결국, 앞으로의 AI는 단순한 도구가 아닌 동반자의 역할을 하지 않을까. 사용자의 삶을 깊이 이해하고, 때로는 조언자가 되고, 때로는 위로자가 되는 존재. 그것이 바로 우리가 꿈꾸는 미래의 AI 아닐까?</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/660a1c04-97d6-4d40-b2e5-5fd2e91eabb9/image.png" alt="" /></p>

<p>그런 AI 운영체제를 만들기 위해서는 구체적으로 어떤 기술이 필요할까. 먼저 사용자 프로필링 기술이 중요하다. 단순히 기본 정보를 아는 것을 넘어, 사용자의 관심사, 취향, 가치관 등을 깊이 있게 파악하고 지속적으로 업데이트하는 시스템이 필요하다. 이는 사용자와의 상호작용을 통해 끊임없이 학습하고 진화하는 능력을 포함한다.</p>

<p>맥락 인식과 감정 지능도 핵심적인 요소다. AI는 사용자의 현재 상황, 감정 상태, 환경 등을 종합적으로 고려하여 적절한 대응을 할 수 있어야 한다. 예를 들어, 사용자가 피곤해 보이는 늦은 밤에는 가벼운 농담보다는 따뜻한 위로의 말을 건네는 식이다. 이를 위해 시간, 장소, 최근 활동 등의 정보를 통합하여 분석하는 기술이 필요하다.</p>

<p>또한, 개인화된 모델 구축도 중요하다. 사용자의 말투, 유머 감각, 대화 스타일을 학습하여 맞춤형 대화를 생성할 수 있어야 한다. 텍스트뿐만 아니라 음성, 이미지, 동작 등 다양한 형태의 입력을 처리하고 출력하는 능력도 갖춰야 할 것이다. 이는 마치 오랜 친구와 대화하는 듯한 자연스러움을 줄 수 있을 것이다.</p>

<p>지식 그래프와 온톨로지 기술도 필수적이다. AI는 사용자의 관심사에 맞춰 지속적으로 새로운 정보를 학습하고 업데이트해야 한다. 이때 신뢰할 수 있는 소스로부터 정보를 수집하고 검증하는 능력이 중요하다.
<img src="https://velog.velcdn.com/images/sungrok7/post/03b00d42-0c99-4e50-9762-418b79f8eeae/image.png" alt="" /></p>

<p>여기서 지식 그래프란 정보를 구조화하는 방식을 말한다. 예를 들어, “사과는 과일이다”, “과일은 식물이다”라는 정보가 있다면, 이를 연결해 “사과는 식물이다”라는 새로운 정보를 유추할 수 있다. 이처럼 지식 그래프는 개별 정보들을 서로 연결하여 더 넓은 맥락에서 이해할 수 있게 해준다.
온톨로지는 이러한 지식 그래프를 만드는 규칙이라고 볼 수 있다. 어떤 개념들이 있고, 그 개념들 사이의 관계를 어떻게 정의할 것인지를 정하는 체계다. 예를 들어, “사람”이라는 개념과 “직업”이라는 개념, 그리고 이들 사이의 “가지다”라는 관계를 정의할 수 있다.
이러한 기술을 통해 AI는 방대한 양의 정보를 연결하고 추론하는 능력을 갖출 수 있다. 단순히 정보를 저장하는 것을 넘어, 정보들 사이의 관계를 이해하고 새로운 통찰을 얻을 수 있게 되는 것이다. 이를 통해 사용자의 생활 전반에 걸친 정보를 체계화하고 연결할 수 있다.
예를 들어, 사용자가 특정 음식에 알레르기가 있다는 정보와 오늘 저녁 약속이 있다는 정보, 그리고 약속 장소인 레스토랑의 메뉴 정보를 연결하여, AI가 알레르기 주의사항을 미리 알려줄 수 있는 것이다. 이처럼 지식 그래프와 온톨로지 기술은 AI가 마치 우리 곁의 세심한 비서처럼 행동할 수 있게 해주는 핵심 기술이라고 할 수 있다.
<img src="https://velog.velcdn.com/images/sungrok7/post/8349052d-5274-4682-859f-97c9665cf211/image.png" alt="" /></p>

<p>그러나 이러한 기술 발전과 함께 고려해야 할 중요한 문제들도 있다. 개인정보 보호는 가장 중요한 이슈 중 하나다. 사용자의 프라이버시를 존중하고 민감한 정보를 안전하게 관리하는 시스템이 필요하다. 사용자가 원하는 수준의 개인화와 프라이버시 사이의 균형을 유지하는 것이 중요할 것이다.
마지막으로, 윤리적 고려사항도 빼놓을 수 없다. AI는 사용자에게 해롭거나 부적절한 영향을 미치지 않도록 하는 안전장치가 필요하다. 또한 객관성을 유지하면서도 사용자의 가치관을 존중하는 균형 잡힌 태도를 가져야 한다. AI의 모든 행동이 사용자를 위한 것이지만 범죄와 같은 나쁜 생각을 할 때, 그리고  사용자가 깊은 우울속에서 또 다른 유형의 나쁜 생각을 할 때에 어떻게 AI가 대처할지는 많은 고찰이 필요해 보인다.
이러한 기술과 고려사항들이 모두 충족된다면, 우리는 영화 ‘Her’의 사만다와 같은 AI 동반자를 만날 수 있을지도 모른다. 하지만 그 과정에서 우리는 기술의 발전과 함께 인간의 가치, 프라이버시, 윤리 등에 대해 끊임없이 고민하고 토론해야 할 것이다. 결국 우리가 만들어갈 AI의 모습은 우리 사회가 추구하는 가치와 방향성을 반영하게 될 테니 말이다.</p>]]></content><author><name>&lt;Kim&gt; &lt;Seongrok&gt;</name><email>&lt;seongrok.kim@elinha.net&gt;</email></author><category term="post" /><category term="Tech" /><category term="review" /><summary type="html"><![CDATA[AI 운영체제를 위해 필요한 기술]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ih1.redbubble.net/image.1098957229.9059/fposter,small,wall_texture,product,750x1000.u1.jpg" /><media:content medium="image" url="https://ih1.redbubble.net/image.1098957229.9059/fposter,small,wall_texture,product,750x1000.u1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">혼자여도 괜찮아: 가속되는 1인 시대에서 AI의 역할</title><link href="http://localhost:4000/post/tech/review/2024-09-10-It's-okay-to-be-alone-The-role-of-AI-in-the-accelerating-solo-era/" rel="alternate" type="text/html" title="혼자여도 괜찮아: 가속되는 1인 시대에서 AI의 역할" /><published>2024-09-10T09:09:09+09:00</published><updated>2024-09-11T17:03:40+09:00</updated><id>http://localhost:4000/post/tech/review/It&apos;s%20okay%20to%20be%20alone:%20The%20role%20of%20AI%20in%20the%20accelerating%20solo%20era</id><content type="html" xml:base="http://localhost:4000/post/tech/review/2024-09-10-It&apos;s-okay-to-be-alone-The-role-of-AI-in-the-accelerating-solo-era/"><![CDATA[<p><img src="https://velog.velcdn.com/images/sungrok7/post/0b58007e-1296-4e98-afc6-1f08e2af041e/image.png" alt="" /></p>

<p>1인 가구 천만 시대. 뉴스에서 본 이 문구가 머릿속을 맴돌았다. 놀라운 일이지만, 오래된 일이며 예견된 일이다.
집안일의 변화를 생각해보면 더욱 그렇다. 한때는 가족이나 이웃과 함께해야만 가능했던 일들이 이제는 혼자서도 충분히 해결할 수 있게 되었다. 예전에는 장작불을 떼고 무거운 가마솥으로 밥을 했던 일들이, 이제는 가스레인지 버튼 하나로 해결된다. 로봇청소기가 집 안을 쓱쓱 청소하고, 식기세척기가 설거지를 뚝딱 해낸다. 세탁기는 빨래를, 에어컨은 더위를 말끔히 해결해준다. 가전제품의 발전이 1인 가구를 부추겼을지도 모른다. 
 가전제품이 물리적인 일들을 해결해주었다면 정서적인 부분은 어떨까? 바로 여기에 AI가 등장한다. 
AI는 앞으로 1인 가구의 정서적인 부분을 채워줄 것으로 보인다, 영화 ‘Her’에서 그려진 모습처럼.</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/57b7eca5-39f9-4354-8995-0cf32bd7c4aa/image.png" alt="" /></p>

<p>주인공 테오도르는 이혼의 아픔 속에서 AI 운영체제 사만다를 만난다. 사만다는 테오도르에게 말동무가 되어주고, 업무를 도와주며, 심지어 지적 성장까지 촉진시켰다. 테오도르가 놀이공원을 찾고 낯선 곳으로 여행을 떠나며 인생을 즐기는 모습을 보며, 나는 그가 느꼈을 충만함을 상상해보았다.
우리 사회도 그렇게 변할 수 있지 않을까. AI와 함께라면 혼자여도 누군가와 함께한다는 느낌과 정서적 안정감을 느낄지도 모른다. 그러다 어쩌면 다른 사람들과 어울리는 것이 ‘비용’처럼 여겨질 날이 오는 부작용이 있을 순 있지만 외로운 이들에게 자신을 알아주고 끊임없이 대화해준다는 건 정말 큰 힘이 되는 일이다.
<img src="https://velog.velcdn.com/images/sungrok7/post/dfbfb402-cb42-44b2-beb6-bc357bc6fbef/image.png" alt="" /></p>

<p>우리 사회는 행복감과 안정감을 느끼는 사람보다 외로움을 느끼는 사람이 더 많은 것 같다. 그런 이들에게 AI가 늘 함께하며 외로움을 달래주어 우울증 지수, 자살 지수가 급격히 내려간다면 얼마나 좋을까. 많은 사람들이 비루함보다 희망과 확신과 환희와 영광을 느낄 수 있다면 얼마나 좋을까. 그런 AI 운영체제를 만들 수 있다면 그보다 큰 보람은 없을 것으로 보인다.
<img src="https://velog.velcdn.com/images/sungrok7/post/40989b5b-f7a9-4c41-a075-78a0441faec4/image.png" alt="" />
미국 의료 전문지 헬스IT애널리틱스는 미국 스탠퍼드대 연구팀이 우울증과 불안 증상 감소에 도움을 주는 AI기반 원격 헬스 플랫폼 유퍼(Youper)를 개발했다고 19일(현지 시간) 보도했다.  출처 : <a href="https://www.aitimes.com/news/articleView.html?idxno=139776">AI타임스</a></p>

<p>올해 AI의 발전을 본다면 유퍼를 넘어, Her에서 나오는 사만다의 구현이 머지 않은 것만 같다. 사만다와 같은 AI운영체제 개발을 위해선 어떤 것이 필요한지 본격적으로 연구해보기로 했다. 다음 글은 “AI 운영체제 개발: 필요한 데이터셋과 기술”를 포스팅할 예정이다.</p>]]></content><author><name>&lt;Kim&gt; &lt;Seongrok&gt;</name><email>&lt;seongrok.kim@elinha.net&gt;</email></author><category term="post" /><category term="Tech" /><category term="review" /><summary type="html"><![CDATA[머지않은 Her의 사만다]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://i0.wp.com/moviesupclose.com/wp-content/uploads/2022/12/20131205_her_theatricaltrailer2.jpg?fit=960%2C540&amp;ssl=1" /><media:content medium="image" url="https://i0.wp.com/moviesupclose.com/wp-content/uploads/2022/12/20131205_her_theatricaltrailer2.jpg?fit=960%2C540&amp;ssl=1" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">데이터 엔지니어, 분석가, 사이언티스트: 역할과 내 커리어의 방향성</title><link href="http://localhost:4000/post/tech/review/2024-07-17-Distinguish_data_roles/" rel="alternate" type="text/html" title="데이터 엔지니어, 분석가, 사이언티스트: 역할과 내 커리어의 방향성" /><published>2024-07-17T09:09:09+09:00</published><updated>2024-09-06T13:05:12+09:00</updated><id>http://localhost:4000/post/tech/review/Distinguish_data_roles</id><content type="html" xml:base="http://localhost:4000/post/tech/review/2024-07-17-Distinguish_data_roles/"><![CDATA[<p>입사 6개월 차까지만 해도 데이터분석가, 데이터엔지니어, 데이터사이언티스트를 구별할 줄 몰랐다. 구성원이 10명 채 안되는 스타트업이다보니 데이터와 관련된 업무는 무엇이든 주워 하였다. 2 년 차쯤되니 구별되기 시작 하였다. 그래서 내가 한 일에서 직군별로 구별하여 정리해보는 시간을 가지기로 했다. 지금쯤에서 한기용 멘토님의 말씀처럼 “급변하는 시대에 결국 내가 좋아하는 것이 무엇인지”  정하고 방향성을 정해야하는 중요한 시기라고 여겼다.</p>

<p>먼저 세 직군의 역할을 정리해보자.</p>

<table>
  <thead>
    <tr>
      <th> </th>
      <th>데이터분석가</th>
      <th>데이터 엔지니어</th>
      <th>데이터 사이언티스트</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>역할</td>
      <td>기존 데이터를 분석하여 의미 있는 인사이트를 도출</td>
      <td>데이터 인프라 구축 및 관리</td>
      <td>고급 분석 기법과 머신러닝을 활용한 문제 해결</td>
    </tr>
  </tbody>
</table>

<p>그림으로 쉽게 풀어준 이미지를 찾았다.
<img src="https://camo.githubusercontent.com/88ea600210f0f0011d76453ae7555a224c907628903fa40361ad71d324d4b0a3/68747470733a2f2f7777772e64726f70626f782e636f6d2f732f77316a76736466306d7638667a346a2f53637265656e73686f74253230323031382d30372d323025323031312e35362e31392e706e673f7261773d31" alt="" />
[출처] <a href="https://github.com/Team-Neighborhood/I-want-to-study-Data-Science/wiki/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%95%BC%EC%9D%98-%EC%A7%81%EA%B5%B0-%EC%86%8C%EA%B0%9C">https://github.com/Team-Neighborhood/I-want-to-study-Data-Science/wiki/데이터-분야의-직군-소개</a></p>

<p>데이터를 석유로 비유하자면 석유를 채굴하고 정제하는 엔지니어, 제품을 분석하고 품질 검사하는 분석가, 제품을 혁신적으로 활용하는 방법을 연구하는 사이언티스트로 설명할 수 있다.</p>

<h2 id="단-회사-by-회사">단, 회사 by 회사</h2>

<p>하지만 회사의 규모와 데이터를 활용하는 정도에 따라 역할이 명확하게 구별되지 않을 수 있다. 게다가 한 사람에게 여러 역할을 요구하는 경우도 많다. 규모별 특성과 장단점을 살펴보자.</p>

<h3 id="소규모-회사-또는-스타트업">소규모 회사 또는 스타트업</h3>

<ul>
  <li>한 사람이 여러 역할을 수행, 아마도 나…</li>
  <li>
    <p>데이터 수집부터 분석, 모델링까지 전 과정을 담당할 수 있다.</p>

    <table>
      <thead>
        <tr>
          <th>장점</th>
          <th>단점</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>비용 효율적, 빠른 의사결정</td>
          <td>전문성 부족 가능성, 업무 과부하</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h3 id="중간-규모-회사">중간 규모 회사</h3>

<ul>
  <li>데이터 분석가와 데이터 엔지니어 역할이 결합되거나, 데이터 엔지니어와 사이언티스트 역할이 결합될 수 있다.</li>
  <li>
    <p>분석가와 데이터 엔지니어, 데이터 엔지니어와 사이언티스트 두 직무를 묶어서 하는 경우도 있고 데이터엔지니어의 역할은 백엔드가 맡고 ML엔지니어와 데이터 사이언티스트 일을 묶어서 맡을 수도 있다.</p>

    <table>
      <thead>
        <tr>
          <th>장점</th>
          <th>단점</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>역할 간 원활한 소통, 프로세스 효율성</td>
          <td>특정 영역에 대한 심도 있는 전문성 부족 가능성</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h3 id="대규모-회사">대규모 회사</h3>

<ul>
  <li>보통 역할이 명확히 구분되어 있지만, 프로젝트나 팀에 따라 유연하게 운영될 수 있다.</li>
  <li>
    <p>데이터 분석가, 엔지니어, 사이언티스트가 각각 전문 영역에 집중하며 협업이 가능하다.</p>

    <table>
      <thead>
        <tr>
          <th>장점</th>
          <th>단점</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>높은 전문성, 대규모 프로젝트 수행 가능</td>
          <td>부서 간 소통 문제 가능성, 관료주의</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<p>우리 회사도 그러하였다. 사내에 데이터팀이 따로 있지 않고 데이터 직무로는 나와 동기 한 명이 처음이었다. 지금 생각해보면 데이터 분석가, 데이터 엔지니어, 머신러닝 엔지니어 역할이 제일 많이 해온 거 같다. 오픈소스 모델들을 가져와서 새로운 알고리즘을 넣거나 최적화를 수행했지만 모델 자체를 건드린 부분은 크게 없었다.</p>

<ul>
  <li>
    <p>머신러닝 엔지니어?</p>

    <p>위에서 잠깐 보였듯이 3가지의 데이터 직군 외에 그로스해커, 데이터 시각화 전문가, 머신러닝 엔지니어도 있다.</p>

    <table>
      <thead>
        <tr>
          <th> </th>
          <th>그로스해커</th>
          <th>데이터 시각화 전문가</th>
          <th>머신러닝 엔지니어</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>역할</td>
          <td>데이터 기반의 마케팅 전략을 통해 빠른 성장을 달성</td>
          <td>복잡한 데이터를 이해하기 쉽고 인사이트 있는 시각적 형태로 표현</td>
          <td>머신러닝 모델을 실제 서비스에 적용하고 운영</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<ol>
  <li>데이터 분석가 역할
    <ul>
      <li>PoC 단계에서 데이터 분석을 통한 사업 가능성 평가, 서비스 필요성 조사</li>
      <li>요구사항 분석을 통한 필요한 데이터 파악</li>
      <li>기획 단계에서 다양한 팀과 협업하여 프로젝트 구성</li>
    </ul>
  </li>
  <li>데이터&amp;머신러닝 엔지니어 역할
    <ul>
      <li>데이터 전처리 파이프라인 구축</li>
      <li>AI 서비스를 위한 서버 환경 구축</li>
      <li>배포 자동화 시스템 개발</li>
      <li>AI 서비스 모니터링 시스템 구축</li>
    </ul>
  </li>
  <li>데이터 사이언티스트 역할
    <ul>
      <li>오픈 소스 AI 모델을 활용한 서비스 기능 개발</li>
      <li>데이터 전처리, 모델 추가 학습, 평가 등 AI 파이프라인 전반 수행</li>
      <li>AI 관련 이슈 대응 및 최적화</li>
    </ul>
  </li>
</ol>

<p>2년 안에 여러가지를 해보았지만 그만큼 깊이가 없다고 느꼈다. 이쯤에서 이직 계획하며 한 직군에 전문성을 쌓고 싶었다.
결국 내가 다른 일보다 열의를 가지고 했던 작업은 데이터를 수집하고 정리하거나 가공하여, 새로운 가치를 띄는 데이터를 만드는 것이었다. 정리와 가공을 하는 과정에서 ML/DL을 이용하는 것에 적극적이었다.</p>

<h3 id="문장-유사도를-활용한-상품-매칭">문장 유사도를 활용한 상품 매칭</h3>

<p>가격 비교 서비스에서 상품 매칭이 필요했다. 100% 아르바이트를 통해 수동으로 해결하던 것을 여러 필드의 값을 활용한 알고리즘과 상품명의 문장 유사도를 활용하여 66%를 자동으로 매칭할 수 있도록 솔루션을 만들었다.</p>

<h3 id="크롤링한-데이터를-nlp와-llm을-활용하여-새로운-데이터로">크롤링한 데이터를 NLP와 LLM을 활용하여 새로운 데이터로</h3>

<p>음식점 리뷰 데이터를 크롤링하여, 키워드로 도출한 다음 업태, 메뉴와 함께 음식점의 취향 데이터를 만들었고 평점과 같은 정형 데이터와 합하여 맛집 개인화 추천에 필요한 데이터를 만들었다.</p>

<h3 id="이목구비를-분석하고-생성형-모델로-새로운-데이터로">이목구비를 분석하고 생성형 모델로 새로운 데이터로</h3>

<p>이미지 데이터에서는 얼굴의 이목구비 위치값을 파악하는 모델을 활용하여, 고객의 얼굴에서 황금비율을 진단해주거나 다른 배경의 이미지 속에서 마치 그 곳에 간 것처럼 새로운 이미지를 생성하는 프로젝트를 진행하였다.</p>

<h3 id="나의-성향-파악">나의 성향 파악</h3>

<p>위 링크의 위키에 나온 내용과 함께 6가지 직군을 성향별로 정리를 해보면 
모두 개발자이긴 하지만</p>

<ul>
  <li>데이터 분석가는 “기획자” 성향이 강하고</li>
  <li>데이터 엔지니어는 “개발자” 성향이 강하고</li>
  <li>데이터 사이언티스트는 “연구자” 성향이 강하다.</li>
  <li>머신러닝 엔지니어는 “개발자”와 “연구자” 성향이 강하지만 개발자 성향이 약간 더 강하다.</li>
  <li>데이터 시각화 전문가는 “개발자”와 “마케터” 성향이 강하지만 개발자 성향이 약간 더 강하다.</li>
  <li>그로스해커는 “마케터” 성향이 가장 강하다.</li>
</ul>

<h2 id="결론">결론</h2>
<p>나는 기획자와 개발자의 성향이 강한 것 같다. 하지만 기획보단 지금의 연차에서는 개발자의 성향을 살려 커리어를 쌓을 때이고 재밌는 것도 개발 일이 더 재밌다. 
데이터 사이언티스트도 고려하지 않은 건 아니지만 AI서비스는 결국 데이터의 양에 따라 성능이 오고 가기에 규모의 경제로 입지가 많이 줄어들 것이 두렵다. 
결국 내가 보다 더 열의를 가지고 흥미 있어하는 직군은 머신러닝/딥러닝을 할 줄 아는 데이터 엔지니어라고 결론을 내렸다.</p>

<h3 id="다음-포스팅">다음 포스팅</h3>

<p>머신러닝/딥러닝 할 줄 아는 데이터 엔지니어의 로드맵</p>]]></content><author><name>&lt;Kim&gt; &lt;Seongrok&gt;</name><email>&lt;seongrok.kim@elinha.net&gt;</email></author><category term="post" /><category term="Tech" /><category term="review" /><summary type="html"><![CDATA[누구인가? 누가 데이터 소리를 내었어?]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/Paper.Holistics.14-2.png" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/Paper.Holistics.14-2.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">카카오록에서 머먹이 되기까지</title><link href="http://localhost:4000/post/tech/review/2024-03-03-from-kakaoRok-to-What2Eat/" rel="alternate" type="text/html" title="카카오록에서 머먹이 되기까지" /><published>2024-03-03T19:11:11+09:00</published><updated>2024-07-17T09:46:11+09:00</updated><id>http://localhost:4000/post/tech/review/from%20kakaoRok%20to%20What2Eat</id><content type="html" xml:base="http://localhost:4000/post/tech/review/2024-03-03-from-kakaoRok-to-What2Eat/"><![CDATA[<p>지난 포스팅 <a href="https://learningnrunning.github.io/example/tech/review/2022-10-22-Finding-good-restaurants-withKakaoMap/"><strong>카카오맵 하나로 괜찮은 맛집 찾기</strong></a> 이후 계속해서 작업을 해왔고 어느 정도 프로토타입을 완성하여, 정리 겸 글을 써본다.</p>

<p>자타공인 인간 카카오맵인 내가 맛집을 찾을 때면, 해당 지역에서 ‘맛집’을 검색한 후 음식점 평균 평점이 3.5 이상이 되는 맛집들을 하나씩 살펴본다. 리뷰를 중점으로 봐왔지만 개인의 평균평점이 노출되는 카카오맵의 업데이트 이후 평점을 위주로 봐왔다. 그걸 자동화 해봤다.</p>

<h2 id="분석-방법">분석 방법</h2>
<blockquote>
  <p>만족한 유저와 불만족한 유저 수를 계산하여 노출하기</p>
</blockquote>

<p><img src="/assets/img/blog/ai_snap/What2Eat_AnalysisMethods.png" alt="Screenshot" class="lead" width="1920" height="1080" loading="lazy" /></p>

<ol>
  <li>유의미한 호(好) 리뷰 찾는 방법</li>
</ol>

<p>먼저 카카오맵에서 서울에 있는 음식점 4만6천 여개에서 104만7천 여개의 리뷰 데이터를 준비했다. 수집한 데이터에는 리뷰뿐만 아니라 유저의 평균 평점, 유저가 해당 음식점에 남긴 평점도 있었다. 유의한 호 리뷰를 찾는 방법은 유저의 평균보다 높은 평가를 했다면  유저 개인의 평균 평점보다 유저가 해당 음식점에 더 높은 평점을 남겼다면 그 음식점에 만족을 했다고 보는 방법이다.</p>

<ul>
  <li>
    <p>쩝쩝박사 - 유의미한 호(好) 리뷰어 인원</p>
  </li>
  <li>
    <p>쩝쩝퍼센트 - (유의미한 호(好) 리뷰어 수/ 전체 리뷰어 수) * 100</p>
  </li>
</ul>

<h5 id="화면-노출-조건"><strong>화면 노출 조건</strong></h5>

<p>쩝쩝박사 인원 수가 5명이 넘는 음식점 중에서 쩝쩝 퍼센트가 높은 순으로 목록을 제공됩니다.</p>

<ol>
  <li>유의미한 비호(非好) 리뷰 찾는 방법</li>
</ol>

<p>개인의 평균 평점이 3.5 이상인 유저가 해당 음식점에 1.5점 이하로 별점을 남겼다면 그 음식점에 불만족을 했다고 보고 유의미한 비호(非好) 리뷰어라고 판단</p>

<ul>
  <li>비호퍼센트 - 유의미한 비호(非好) 리뷰어 수 / 전체 리뷰어수 * 100</li>
</ul>

<h5 id="화면-노출-조건-1"><strong>화면 노출 조건</strong></h5>

<p>비호퍼센트가 10프로 넘으면 호(好) 화면 노출 조건에 맞더라도 비호퍼센트를 노출하며 주의를 줍니다.</p>

<h2 id="uiux-고민">UI/UX 고민</h2>

<h3 id="프롬프트-버전카카오록">프롬프트 버전(카카오록)</h3>

<p>프롬프트 버전으로 가장 간단하게 구현해봤다. 가장 빨리 만들 수 있는 방법이었고 먼저 팀 내에서 사용할 목적이었기 때문이다. 바로 지도가 필요하다는 피드백이 왔다.</p>

<p><img src="/assets/img/blog/prompt_kakaorok.png" alt="Screenshot" /></p>

<h3 id="streamlit으로는-한계인-지도-기반-버전">Streamlit으로는 한계인 지도 기반 버전</h3>

<p>처음엔 지도 기반으로 개발 하였다. 이는 Streamlit 프레임워크로 개발하기엔 한계점인데, 그 이유는 앱에서 사용하기가 불편하기 때문이다. 그래서 여전히 Web 버전으로 남겨두었다. 그리고 이때 데이터를 읽어들이는 과정에서 개선을 하기 위해, 하루 해커톤을 하였고 이 과정에서 kakaoRok이 아닌 What2Eat으로 명칭을 변경하였다.</p>

<p><img src="/assets/img/blog/ai_snap/what2eat_map_ver.png" alt="Screenshot" /></p>

<h3 id="채팅-형식의-ux로-바꾼-이유">채팅 형식의 UX로 바꾼 이유</h3>

<p>앱에서 이용하기 불편한 이유에서인지  What2Eat을 소개한 친구들도 여전히 나한테 맛집을 물어보는 친구들이 많았다. 카톡으로 여러 맛집을 이름/링크/추천이유를 보내던 중, What2Eat도 친구에게 보내주듯 구현하면 어떨까 아이디어가 떠올라. 친구가 알려주는 맛집 리스트 개념으로 UX를 잡았다.</p>

<p><img src="/assets/img/blog/ai_snap/What2Eat_Examplescreen.png" alt="Screenshot" class="lead" width="1920" height="1080" loading="lazy" />
<br /><br /></p>

<h1 id="결과">결과</h1>
<p><a href="https://what2eat-chat.streamlit.app/">What2Eat_Chat(채팅 기반)</a><br />
<a href="https://what2eat.streamlit.app/">What2Eat(지도 기반)</a><br />
<a href="https://github.com/LearningnRunning/What2Eat/tree/main">What2Eat 소스코드</a><br /></p>

<h2 id="what2eat-믿고-직접-찾아-가보기">What2Eat 믿고 직접 찾아 가보기</h2>

<h3 id="신촌에서">신촌에서</h3>
<p><img src="/assets/img/blog/what2eat_review.png" alt="Screenshot" class="lead" width="1920" height="1080" loading="lazy" />
날씨가 추워 많이 걷지 못하여, 500미터로 하였고 좋아하는 카테고리를 모두 골라보았다. 평점을 남긴 사람 중에 절반 가까이가 솔직한 평가인 쩝쩝박사가 인증한 곳이다. 신촌에 1년 넘게 산 적이 있는데 그 당시에도 있었을 법했고 살던 곳 근처인데도 몰랐던 맛집이라 신기했다. 결과는 대만족이었다…</p>

<p>‘What2Eat(머먹)’으로 찾은 곳은 신기하게도 그 음식점 주변은 조용한데, 그 음식점만 바글바글 사람이 많다.</p>

<h3 id="선릉에서">선릉에서</h3>
<p><img src="/assets/img/blog/pongyear_1.png" alt="Screenshot" class="lead" width="1920" height="1080" loading="lazy" />
같이 개발 공부하던 친구들이랑 번개 일정이 잡혀서 급하게 머먹으로 찾았는데 대성공이었다. 연거푸 ‘진짜 맛있다’는 친구들의 평가에 머먹의 뿌듯함을 한껏 느꼈다. 번개를 친 다음주에 또 갔고 이번에도 같이 간 일행들이 모두 만족하였다.</p>]]></content><author><name>&lt;Kim&gt; &lt;Seongrok&gt;</name><email>&lt;seongrok.kim@elinha.net&gt;</email></author><category term="post" /><category term="Tech" /><category term="review" /><summary type="html"><![CDATA[데이터 분석 결과만으로 찐맛집 찾기 프로젝트]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/fromkakaorokTowhat2eat.png" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/fromkakaorokTowhat2eat.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">80일 안에 AI 서비스 배포하기</title><link href="http://localhost:4000/post/tech/review/2023-12-20-Deploying-AI-services-in-80-days/" rel="alternate" type="text/html" title="80일 안에 AI 서비스 배포하기" /><published>2023-12-20T19:11:11+09:00</published><updated>2024-03-06T20:21:51+09:00</updated><id>http://localhost:4000/post/tech/review/Deploying%20AI%20services%20in%2080%20days</id><content type="html" xml:base="http://localhost:4000/post/tech/review/2023-12-20-Deploying-AI-services-in-80-days/"><![CDATA[<p>2023년 하반기, SNOW 사의 AI 프로필의 성행으로 AI를 기반으로 내가 찍은 듯한 사진을 제공하는 서비스가 큰 인기를 끌었다. 이에 우리 회사 대표님도 이러한 서비스를 개발하고 싶다는 뜻을 밝히셨다. 그것도 “하루 빨리”</p>

<p><img src="https://file.noononda.com/article/202306/20230612002916.jpg" alt="" />
이에 따라, 2023년 7월 26일, AI 사진 서비스 프로젝트가 시작되었다. 다시 한번 멘땅의 헤딩이 시작되는 듯 하였지만 저번 프로젝트 [BalanceMakeUp]와 달리 확실한 레퍼런스가 있는 듯하여 조금은 안심이 되었다. 두려웠던 건 빡빡한 프로젝트 기간과 유료 서비스 계획이었다.</p>

<p>먼저, SNOW의 AI 프로필을 리뷰하였다. 또한, 메이튜, <a href="https://carat.im/">캐럿</a>과 같이 AI 이미지 생성 서비스를 하고 있는 다른 플랫폼도 리뷰하였다.</p>

<h2 id="ai-프로필은-사실-딥페이크">AI 프로필은 사실 딥페이크?</h2>

<p>레퍼런스 조사를 통해 경쟁 서비스의 구현 구조를 파악하려 하였다. 처음엔 Stable Diffusion를 활용한 사진 생성 서비스가 아닐까 하였지만 실제는 옷이나 배경은 변경하지 않고 얼굴만 바꿔주는 서비스가 아닐까 싶었다.
<img src="https://velog.velcdn.com/images/sungrok7/post/c8ca0979-c52a-4c1b-8ccf-b5cedad1fe90/image.jpg" alt="" /></p>

<p>이 가설을 토대로 기능 설계를 해보았다. 먼저 틀로 쓸 사진 세트가 필요했고 이용자의 얼굴을 딥페이크로 입혀보는 기능을 준비했다.</p>

<h2 id="사진-테마-정하기">사진 테마 정하기</h2>
<p>AI프로필과는 완전히 똑같이 할 수 없었고 다른 테마가 필요했다. 레퍼런스 조사를 통해 경쟁 서비스가 이용자들에게 어떤 만족을 주고, 어떤 욕구를 해결해주었는지 살펴보았다.</p>

<ul>
  <li>다른 장소나 스타일링을 손쉽게 경험할 수 있다.</li>
  <li>정돈된 모습으로 자신을 표현할 수 있다.</li>
</ul>

<p>이러한 이용자의 니즈와 SNOW사의 AI프로필과의 차별점을 살려, Snap 사진을 콘셉트로 정했고 서비스 이름도 ‘AI Snap’으로 하였다.</p>

<p>Snap사진은 이용자들이 다양한 경험과 자신을 표현할 수 있는 기회를 제공하고자 한다. 다양한 장소와 스타일링으로 전문 작가가 찍은 듯한 사진을 제공하는 것이 서비스의 목표였다.</p>

<p>전문 작가가 찍은 것처럼 각 테마별로 세트를 준비하였다. 예를 들어, 봄 버전은 꽃이 만개했고 여름은 싱그러운 파란색 배경에서 가을은 단풍이나 은행나무 배경으로 겨울은 흰 배경으로 사계절를 세트로 하였다. AI 서비스 특성상 일회성 이용이 아닌 여러 테마를 제공함으로써 지속적인 관심을 유도할 수 있다는 장점도 가지고 있다.
<img src="https://velog.velcdn.com/images/sungrok7/post/5a72e14c-24f1-4e45-b641-712e021eae6f/image.jpg" alt="" /></p>

<h2 id="선명하지-않음이-오히려-자연스럽다는-것">선명하지 않음이 오히려 자연스럽다는 것</h2>

<p>AI 사진 특성상 피부가 매우 매끄럽다. 딥페이크를 적용한 결과물을 Photoshop에서 이런 저런 조정을 해보며  AI스럽지 않은 이미지를 만들어 보았다.</p>

<ul>
  <li>대비를 낮추어, 사진의 자연스러움을 높였다.</li>
  <li>Noise를 추가하여, 사진의 질감을 살렸다.</li>
</ul>

<p>이를 OpenCV를 이용하여 적용해보았다.
<img src="https://velog.velcdn.com/images/sungrok7/post/1725ed5f-c3fc-4e0f-91f6-f1c427c5068d/image.jpg" alt="" /></p>

<h1 id="결론">결론</h1>
<p>71일 만에 Phase 1이 배포되었고 지금은 Phase 2에서는 좀더 여러 테마를 보일 예정이다. 
<img src="https://velog.velcdn.com/images/sungrok7/post/21daf748-d86f-4621-b602-33a1c8fc79d7/image.jpg" alt="" /></p>

<p>사진출처
<a href="https://imnews.imbc.com/news/2023/enter/article/6499488_36161.html">AI프로필 흑백이미지1</a>
<a href="https://m.blog.naver.com/chois909/223120487534?isInf=true">AI프로필 흑백이미지2</a>
<a href="https://lemontealove.tistory.com/190">AI프로필 흑백이미지3</a>
작성자 생성 사진[이효리님의 사진을 사용하여 생성한 이미지]</p>]]></content><author><name>&lt;Kim&gt; &lt;Seongrok&gt;</name><email>&lt;seongrok.kim@elinha.net&gt;</email></author><category term="post" /><category term="Tech" /><category term="review" /><summary type="html"><![CDATA[대표님 말씀대로 '하루빨리' AI 서비스 개발기]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://file.noononda.com/article/202306/20230612002916.jpg" /><media:content medium="image" url="https://file.noononda.com/article/202306/20230612002916.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">조금 다른 Topic 모델링(Feat. 모두콘)</title><link href="http://localhost:4000/post/tech/review/2023-12-11-a-little-different-topic-modeling/" rel="alternate" type="text/html" title="조금 다른 Topic 모델링(Feat. 모두콘)" /><published>2023-12-11T20:23:11+09:00</published><updated>2024-03-06T20:21:51+09:00</updated><id>http://localhost:4000/post/tech/review/a%20little%20different%20topic%20modeling</id><content type="html" xml:base="http://localhost:4000/post/tech/review/2023-12-11-a-little-different-topic-modeling/"><![CDATA[<p>기존 Topic 모델링을 주로 단어 위주로 한다. 다만 글 뭉치가 단어까지 정제 되면서 많은 데이터가 소실되지 않을까 하여, 이번 Topic모델링에서는 최대한 원문을 보존하면서 진행하였다.</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/e62011cd-0211-4046-9f08-138f90437e04/image.png" alt="" /></p>
<h2 id="1-데이터-스크래핑">1. 데이터 스크래핑</h2>
<h3 id="가-방법">가. 방법</h3>
<ul>
  <li>AJax를 날려 api를 호출하는 방식으로 가져왔다. 지속적으로 업데이트해야하는 데이터가 아니라 일회성이기에 빠르고 쉬운 방법을 택했다.</li>
  <li>셀레니움 이용, AJax로 세 개의 플랫폼 모두 가져올 수 있었지만 왓챠에서는 셀레니움을 이용했다. 모두랩 구성원들끼리 여러 스크래핑 방법을 함께 시도해보기 위해 왓챠만 다르게 가져와봤다.
    <h3 id="나-데이터-구성">나. 데이터 구성</h3>
  </li>
  <li>총 44,657 개 리뷰를 스크래핑했다.</li>
  <li>리뷰 특성상 자유롭고 다양한 표현이 많다보니, 오타나 띄어쓰기가 안되어 있는 것도 많았다.</li>
</ul>

<table>
  <thead>
    <tr>
      <th>리뷰</th>
      <th>리뷰어PK</th>
      <th>작성날짜</th>
      <th>리뷰어의 평가</th>
      <th>리뷰 공감, 비공감</th>
      <th>플랫폼</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>부럽다 내 행복이 먼저라고 말해주는꼰대스럽지않은멘토 우리나라에 저런제도가 있을수있을까? 혹 만들어진다해도 벤같은 경력을가진 노년이 인턴을 하려하지도 않을것이고 그리된다해도 새로운것을 배우려하지않고 내가 왕년에말이야를 늘어놓는 꼰대가될듯.</td>
      <td>n42KR7yj2NHi+CZPN+fqPQ==</td>
      <td>2015.10.01</td>
      <td>5.0</td>
      <td>121</td>
      <td>cgv</td>
    </tr>
  </tbody>
</table>

<h2 id="2-맞춤법-검사">2. 맞춤법 검사</h2>
<ul>
  <li>py-hanspell은 네이버 맞춤법 검사기를 이용한 파이썬용 한글 맞춤법 검사 라이브러리이다.</li>
  <li>오타, 띄어쓰기, 비표준어, 신조어 수정 작업을 진행하였다.</li>
  <li>배우의 이름을 통일시켜주는 것은 추후 임베딩할 때에 큰 도움이 되었다.
<img src="https://velog.velcdn.com/images/sungrok7/post/a6148144-bad1-47ce-bf69-06c57a1c88a6/image.png" alt="" /></li>
</ul>

<h2 id="3-문장-분리">3. 문장 분리</h2>
<p>한 리뷰 안에 여러 의미를 함축했을 가능성을 생각하여, 리뷰를 한 문장씩 나누는 작업을 하였다.
문장 분리기를 사용하였는데, <a href="https://github.com/hyunwoongko/kss">kss</a>와 <a href="https://velog.io/write?id=eaab781a-d844-4b1e-b728-5b17e52fede6">Kiwi</a>를 비교해보았다.</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/32e9bc12-a3c2-4ab5-ba62-91b95c814903/image.png" alt="" /></p>

<p>kss는 형태소 분석하여 종결 패턴 기반으로 문장을 분리하였고, Kiwi는 형태소 분석과 더불어 언어모델(SkiBigram)을 활용하여 문장을 분리하였다. Kiwi의 성능이 더 좋아 최종적으로 Kiwi를 사용하였다.</p>

<p>그 결과, 44,657개 리뷰가 72,287개의 문장으로 분리되었다.</p>

<h2 id="4-감성분석">4. 감성분석</h2>
<p>처음엔 문장분리 후에 바로 군집화를 실행하였다. 그 결과 한 군집 내에서 긍정과 부정 표현이 함께 들어가서 추후 LLM을 통해 주제를 추출할 때 결과물이 안 좋았다. 그래서 감성분석 후 긍정, 중립, 부정 결과에 따라 3개의 데이터로 나눠 주었다. CLOVA Sentiment API를 활용하였다. 
<img src="https://velog.velcdn.com/images/sungrok7/post/959339ab-2290-48e5-b997-4f9dcbdb8bee/image.png" alt="" /></p>

<h3 id="가-감성분석-결과-분포">가. 감성분석 결과 분포</h3>
<p>긍정, 중립, 부정 나온 결과값과 스크래핑 해온 ‘리뷰어의 별점’을 합산하여, 데이터를 나누었다.
<img src="https://velog.velcdn.com/images/sungrok7/post/d7a8abb3-f3bb-471c-96de-81db99618526/image.png" alt="" /></p>

<h2 id="5-군집화">5. 군집화</h2>
<ul>
  <li>의미 단위로 잘 묶이게 하기 위해 한국어 임베딩 모델을 사용하였다.</li>
  <li>허깅스페이스의 <a href="https://huggingface.co/jhgan/ko-sroberta-multitask">jhgan/ko-sroberta-multitask</a></li>
  <li>K-means를 이용하여, 긍정/중립/부정을 각각 20개씩 군집화 진행하였다.
<img src="https://velog.velcdn.com/images/sungrok7/post/2f7557ec-2d79-4e20-8c95-263164728846/image.png" alt="" /></li>
</ul>

<h3 id="가-영화-소재와-관련된-군집-선택">가. 영화 소재와 관련된 군집 선택</h3>
<p>이번 연구에서는 LLM을 활용하기 전에 팀원들과 각 군집들의 문장들을 보며, 군집별 태깅을 하였다.
재밌다, 잔잔하다와 같이 단순 평가를 제외하고 영화 소재에 대한 의미가 담긴 군집 7가지 군집을 재조합하였다. 그 결과 4가지의 군집으로 정리가 되었다.</p>

<h3 id="나-군집-결과">나. 군집 결과</h3>
<ul>
  <li>시니어와 관련한 사회 이슈 (긍정16/18, 중립7)</li>
  <li>직장에서 시니어 (긍정 14)</li>
  <li>일상에서 시니어 (긍정 15, 중립10)</li>
  <li>멘토와 관련한 이슈 (중립 17)</li>
</ul>

<h2 id="6-llm을-통한-topic-추출">6. LLM을 통한 Topic 추출</h2>
<p>4개의 군집의 문장들을 LLM을 통해 Topic을 추출해볼 마지막 단계이다.</p>

<h3 id="가-ragretrieval-augmented-generation">가. RAG(retrieval-augmented generation)</h3>
<p><img src="https://velog.velcdn.com/images/sungrok7/post/f0276125-22a4-476e-9cc4-c8201d92e517/image.png" alt="" />
외부 소스를 활용하여 LLM의 결과를 받아낼 수 있는 LangChain의 핵심 체인이다.</p>

<h3 id="나-요약-결과">나. 요약 결과</h3>

<h4 id="1-시니어와-관련한-사회-이슈긍정1618-중립7">1) 시니어와 관련한 사회 이슈(긍정16/18, 중립7)</h4>
<p>주요 테마는 나이가 많은 사람들의 지혜와 경험을 존중하고 배우는 것입니다. 이 영화는 어른들의 조언과 도움을 받아 성장하고자 하는 젊은 세대와의 소통과 상호 이해를 강조합니다. 또한, 노년에도 새로운 도전과 성장이 가능하다는 메시지를 전달합니다. 이는 노년의 인턴으로서 새로운 경험을 하는 주인공을 통해 나타납니다. </p>

<p> ”시니어의 연륜. 인생 선배로서의 적절한 타이밍의 충고!!”</p>

<p>#### 2) 멘토와 관련한 이슈(중립 17)
 나이와 경험에 따른 지혜, 어르신과 젊은이의 소통, 인생 선배의 조언, 은퇴 후의 새로운 시작, 부모님 세대와의 이해와 소통입니다. 이 영화는 어르신과 젊은이의 만남을 통해 나이와 경험에 따른 지혜를 전달하고, 인생 선배로서의 조언과 은퇴 후의 새로운 시작에 대한 이야기를 다루며, 부모님 세대와의 소통과 이해를 강조합니다. 이러한 주제들은 리뷰에서 다음과 같은 문장들을 기반으로 파악할 수 있습니다: 
“은퇴한 70대와 현 30대 CEO의 만남!”, “나이 많고 경험 많은 분의 조언”, “은퇴한 노인이 지혜로 메꿔주는 과정”, “부모님 세대를 이해할 수 있는 또 다른 방법”, “진짜 어른이 되고 싶은”.</p>

<h4 id="3-직장에서-시니어긍정-14">3) 직장에서 시니어(긍정 14)</h4>
<p>주요 주제는 적당한 재치, 적당한 교훈, 직장에서 열정과 연륜의 조화, 나이차를 넘어선 우정입니다. 이 영화는 사람들의 행동이 기대에 부합하지 않을 때 사람들이 그들을 재평가하는 것을 다루고 있습니다. 행동이 객관적으로 긍정적이거나 그들에게 긍정적인 영향을 미친다면 사람들은 그들을 긍정적으로 평가합니다. 그렇지 않으면 사람들은 그들을 부정적으로 평가합니다. </p>

<p>“연륜으로 열정이 넘치지만 여러 면에서 부족한 젊은 세대에게 도움이 되는 시니어 인턴?”“연초에 킹스맨의 익살+중년미가 있었다면, 연말은 인턴의 훈훈+노년미(?)가 있다.”</p>

<h4 id="4-일상에서-시니어긍정-15-중립10">4) 일상에서 시니어(긍정 15, 중립10)</h4>
<p>나이와 경험에 따른 지혜와 조언, 세대 간의 소통, 노년 시기의 다시 시작, 어른으로서의 역할과 책임, 그리고 어른들의 공경과 인생 선배로서의 역할입니다. 이 영화는 어르신들의 경험과 지혜를 소중히 여기고, 세대 간의 소통과 이해를 강조하며, 노년 시기에도 새로운 도전과 성장이 가능함을 보여줍니다. 또한, 어른으로서의 책임과 역할을 강조하며, 어른들의 공경과 인생 선배로서의 역할을 중요시합니다. 이 영화는 따뜻하고 감동적인 이야기를 통해 어른들의 가치와 중요성을 전달합니다.</p>

<p>“은퇴한 70대와 현 30대 CEO의 만남! get wiser as you get older.”
“나이 많고 경험 많은 분의 조언현대에서도 필요하다 생각됩니다 따뜻해지고 어르신의.”
“시니어의 연륜. 인생 선배로서의 적절한 타이밍의 충고!!”
 ”울 남편이 꼭 봐야 할 영화 이렇게 늙어갈 수 있다면~~누군가의 멘토로또 누군가의 인생 선배로 손을 내밀어 주는 어른으로 늙어갔으면.”</p>

<h3 id="다-추가-연구-방법map-reduce">다. 추가 연구 방법(Map reduce)</h3>
<p>군집선택 단계를 생략하고 바로 60개의 군집별 요약을 LLM을 통해 한 뒤에 다시 Topic을 할 수 있는 방법도 있다. <a href="https://python.langchain.com/docs/modules/chains/document/map_reduce">Map_reduce</a> 랭체인을 활용할 수 있을 거 같다.
<img src="https://velog.velcdn.com/images/sungrok7/post/4bc94f79-ff70-4227-9166-f04c6c8c015d/image.png" alt="" /></p>

<h2 id="7-연구를-마치며-느낀점">7. 연구를 마치며 느낀점</h2>
<p>‘나이’만 들어도 공경하던 시대가 있었는데 ‘시니어’가 왜 옛날보다 덜 공경받게 되었을까? 왜 더 쉽게 사회에서 배제될까? 생각해보았을 때 가장 큰 요인은 ‘기술에 대한 이해도’이다.</p>

<p>아래의 오른쪽 사진은 ‘한겨레’ 기사 중 하나인데, 햄버거 주문을 위해 키오스크 실습을 하는 노인분들을 그린 기사이다. 상황을 가정해보자. 키오스크만으로 주문을 받는 매장에서 굳이 직원한테 주문을 하겠다고 실할이를 부리는 ‘노인’을 본다면 누군가는 쉽게 ‘꼰대’가 라고 하지 않을까. 노인은 키오스크가 두려웠을 뿐인데..</p>

<p>영화 ‘인턴’에서 시니어 인턴 역할인 벤 휘태커가 존경받는 이유는 기술을 잘 아는 ‘시니어’라서가 아니고 본래 시니어에 기대하던 것을 잘 했기 때문이다. 왼쪽의 리뷰가 이번 연구 목적인 ‘MZ가 바라는 시니어’를 가장 잘 담은 듯하다. 
<img src="https://velog.velcdn.com/images/sungrok7/post/ed5bbab9-799b-4cf1-8f5d-99d0ffe10f14/image.png" alt="" /></p>

<p>결론은 서로의 세대가 잘 아는 것을 세대끼리 잘 공유하고 소통한다면 우리 사회는 더 연결되지 않을까?</p>

<h1 id="2023-moducon-발표-후기">2023 MODUCON 발표 후기</h1>
<p>본 연구 주제로 모두콘에서 발표를 하였다. 인문사회 분야 청중들이 많이 올 거 같아, 예시 위주로 설명을 하였는데… 모두연 행사에 그래도 너무 코드 얘기가 없었나.. 아쉬웠다. 필요하신 분은 코드 공유해드리겠다는 말이라도 마지막에 하고 싶었지만 시간이 부족해 급하게 마무리하다가 깜빡하였다… ! 그래도 재밌는 경험이었다 :)
<img src="https://velog.velcdn.com/images/sungrok7/post/a1908a46-13f9-4f79-8211-d2bb6fa382d0/image.jpg" alt="" /></p>]]></content><author><name>&lt;Kim&gt; &lt;Seongrok&gt;</name><email>&lt;seongrok.kim@elinha.net&gt;</email></author><category term="post" /><category term="Tech" /><category term="review" /><summary type="html"><![CDATA[2023 모두콘에서 발표한 내용을 정리하였습니다. Sentence Similarity, LLM 등을 이용한 Topic 모델링]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://velog.velcdn.com/images/sungrok7/post/e62011cd-0211-4046-9f08-138f90437e04/image.png" /><media:content medium="image" url="https://velog.velcdn.com/images/sungrok7/post/e62011cd-0211-4046-9f08-138f90437e04/image.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">레퍼런스 없는 서비스, 기획부터 배포까지</title><link href="http://localhost:4000/post/tech/review/2023-12-06-Reference-lessservices-fromplanningtodeployment/" rel="alternate" type="text/html" title="레퍼런스 없는 서비스, 기획부터 배포까지" /><published>2023-12-06T21:51:11+09:00</published><updated>2024-03-06T20:21:51+09:00</updated><id>http://localhost:4000/post/tech/review/Reference-lessservices-fromplanningtodeployment</id><content type="html" xml:base="http://localhost:4000/post/tech/review/2023-12-06-Reference-lessservices-fromplanningtodeployment/"><![CDATA[<h1 id="프로젝트-회고록을-쓴-이유">프로젝트 회고록을 쓴 이유</h1>
<p>입사한 지 5개월 차에 시작한 프로젝트에서 기획부터 배포까지 경험했다. 프로젝트 [밸런스 메이크업]은 4개월 동안 진행 후 배포는 미뤄둔 채, 급하게 프로젝트 [AI Snap]을 급하게 진행하였고 80일 만에 두 개의 프로젝트가 동시에 배포되었다. 실제 배포는 처음인데다가 총 7개월 동안 2개의 프로젝트를 하느라 정리할 틈 없이 급하게 달려왔다. 분명, 기억해야할 것과 다음엔 반복하지 말아야할 것이 있으리라 생각되어서 회고록을 쓰고 싶었다.</p>

<h1 id="프로젝트-설명">프로젝트 설명</h1>
<p>이번 프로젝트는 악안면 성형 및 재건 수술(Maxillofacial Plastic and Reconstructive Surgery )을 위해 연구한 얼굴의 이상적인 비율의 수치값을 토대로, 이용자의 얼굴 비율을 분석하여, 분석 내용과 메이크업으로 커버할 수 있는 것을 알려주는 서비스이다. 분석 내용은 두 가지로 나뉜다.</p>

<p>첫 번째로 유저 얼굴부위를 세밀하게 파악하여, 얼굴의 이상적인 비율과 분석 내용을 제공한다. 10 가지 부위 중에서 각 측정 기준별로 약점이 되는 부분을 메이크업으로 보완할 수 있게 메이크업 팁을 제공한다. 
<img src="https://velog.velcdn.com/images/sungrok7/post/e972485f-e4fd-4524-b7bb-eee1b0308a59/image.png" alt="" /></p>

<p>두 번째로 얼굴형 진단, 얼굴형 진단 결과에 따른 쉐이드, 하이라이트, 블러셔를 바를 위치를 이용자의 얼굴 대입하여 알려주는 뷰티밸런스이다.
<img src="https://velog.velcdn.com/images/sungrok7/post/2e3ecdc8-b48d-4025-9b1f-0883c980a645/image.png" alt="" /></p>

<h2 id="내가-맡은-일">내가 맡은 일</h2>
<p>첫 프로젝트였지만 기획, 개발, 서버 설계, 배포 후 모니터링까지 다양한 업무를 맡았다. 구체적으로는 다음과 같은 업무를 담당했다.</p>

<p>기획: 기획서 작성, 타서비스 조사, 타깃 고객 니즈 조사, 타서비스와의 차별점 기획
개발: 얼굴형 진단 기능, 황금비율 분석 기능 개발
외주 협업: 메이크업 전문가와 메이크업 가이드 정리
서버 설계: 스트레스테스트
배포 후: 모니터링
<img src="https://velog.velcdn.com/images/sungrok7/post/66d612f3-a203-46d5-9d3e-01ef217dad52/image.png" alt="" />
분석 기능 개발을 하기 위한 흔적들</p>

<h2 id="힘들었던-것">힘들었던 것</h2>
<p>이번 프로젝트에서 가장 힘들었던 점은 기획서 작성, 타서비스 비교 후 차별 기능 기획, 외주업체인 메이크업 전문가와 협업해서 메이크업 팁 정리하는 것와 같이 개발 외 영역을 했던 부분에서이다. 개발은 해오던 것이 였지만, 기획이나 마케팅은 부족한 부분이 많았고 하고 있을 때도 자신이 없었다. 대표님은 나에게 결단을 요구하셨는데, 잘 모르는 분야기에 확실히 하기 위해 더 알아보고 결정하느라 어려운 부분이 많았다.</p>

<p>또한, 기획이 명확하지 않은 상태에서 동시에 개발을 진행하느라 기능 수정이 너무 많았다. 그 중에는 아얘 쓰지 못한 기능도 있다. 대표적으로 얼굴 대칭 분석 기능이 있는데, 미의 기본은 대칭이라고 생각해서 이 기능을 꼭 배포하고 싶었는데 실패했다. 양쪽 눈과 입술 좌우의 비대칭 정도를 구해 시각화한 기능이었다. 눈과 입술은 메이크업으로 비대칭을 커버하기 가장 좋은 부분이었기 때문이다. 다음 업데이트에서 꼭 해야지!</p>

<p><img src="https://velog.velcdn.com/images/sungrok7/post/27f2338a-8d94-436b-84a9-e9ba39af1a22/image.png" alt="" /></p>

<h2 id="좋았던-것">좋았던 것</h2>
<p>가장 힘들었던 것이 지나고 나면 좋았던 것… 국룰인가? 기획부터 시작하였기에 타서비스 조사를 하며, 주요 고객층이 앞으로 개발할 서비스에 어떤 것을 원하는지 알 수 있었고, 추후 기능 개발할 때도 서비스의 주목적을 명확히 알기에 집중하기도 쉬웠다. 프로젝트 기획부터 배포까지 하나하나 참여하고 많은 부분에선 리드를 해보니 집체 교육을 받은 느낌이었다. 다음 프로젝트인 [AI Snap]에서는 협업이 훨씬 쉬웠다. 개발 분야만 알았더라면 오해했을 부분도, 타 부서의 입장에서 이해할 수 있었기에 의사소통에서도 용이했다.</p>

<h1 id="결론">결론</h1>
<blockquote>
  <p>la douleur passe la beauté reste
고통은 지나간다, 아름다움은 남는다.</p>
</blockquote>]]></content><author><name>&lt;Kim&gt; &lt;Seongrok&gt;</name><email>&lt;seongrok.kim@elinha.net&gt;</email></author><category term="post" /><category term="Tech" /><category term="review" /><summary type="html"><![CDATA[입사한 지 5개월 차에 시작한 프로젝트에서 기획부터 배포까지 경험해보았다.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://velog.velcdn.com/images/sungrok7/post/2e3ecdc8-b48d-4025-9b1f-0883c980a645/image.png" /><media:content medium="image" url="https://velog.velcdn.com/images/sungrok7/post/2e3ecdc8-b48d-4025-9b1f-0883c980a645/image.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>